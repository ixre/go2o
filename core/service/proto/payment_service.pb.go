// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: payment_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * 支付方式的位值
type EPayMethod int32

const (
	EPayMethod__EPayMethodZero EPayMethod = 0
	// * 第三方支付,如支付宝等
	EPayMethod_PaySP EPayMethod = 1
	// * 余额抵扣
	EPayMethod_Balance EPayMethod = 2
	// * 钱包支付
	EPayMethod_Wallet EPayMethod = 4
	// * 积分兑换
	EPayMethod_Integral EPayMethod = 8
	// * 用户卡
	EPayMethod_UserCard EPayMethod = 16
	// * 用户券
	EPayMethod_UserCoupon EPayMethod = 32
	// * 现金支付
	EPayMethod_Cash EPayMethod = 64
	// * 银行卡支付
	EPayMethod_BankCard EPayMethod = 128
	// * 卖家支付通道
	EPayMethod_SellerPay EPayMethod = 256
	// * 系统支付通道
	EPayMethod_SystemPay EPayMethod = 512
)

// Enum value maps for EPayMethod.
var (
	EPayMethod_name = map[int32]string{
		0:   "_EPayMethodZero",
		1:   "PaySP",
		2:   "Balance",
		4:   "Wallet",
		8:   "Integral",
		16:  "UserCard",
		32:  "UserCoupon",
		64:  "Cash",
		128: "BankCard",
		256: "SellerPay",
		512: "SystemPay",
	}
	EPayMethod_value = map[string]int32{
		"_EPayMethodZero": 0,
		"PaySP":           1,
		"Balance":         2,
		"Wallet":          4,
		"Integral":        8,
		"UserCard":        16,
		"UserCoupon":      32,
		"Cash":            64,
		"BankCard":        128,
		"SellerPay":       256,
		"SystemPay":       512,
	}
)

func (x EPayMethod) Enum() *EPayMethod {
	p := new(EPayMethod)
	*p = x
	return p
}

func (x EPayMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPayMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_service_proto_enumTypes[0].Descriptor()
}

func (EPayMethod) Type() protoreflect.EnumType {
	return &file_payment_service_proto_enumTypes[0]
}

func (x EPayMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPayMethod.Descriptor instead.
func (EPayMethod) EnumDescriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{0}
}

type AdjustOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentNo string `protobuf:"bytes,1,opt,name=paymentNo,proto3" json:"paymentNo"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
}

func (x *AdjustOrderRequest) Reset() {
	*x = AdjustOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustOrderRequest) ProtoMessage() {}

func (x *AdjustOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustOrderRequest.ProtoReflect.Descriptor instead.
func (*AdjustOrderRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{0}
}

func (x *AdjustOrderRequest) GetPaymentNo() string {
	if x != nil {
		return x.PaymentNo
	}
	return ""
}

func (x *AdjustOrderRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DiscountBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int32  `protobuf:"zigzag32,1,opt,name=orderId,proto3" json:"orderId"`
	Remark  string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *DiscountBalanceRequest) Reset() {
	*x = DiscountBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountBalanceRequest) ProtoMessage() {}

func (x *DiscountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountBalanceRequest.ProtoReflect.Descriptor instead.
func (*DiscountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{1}
}

func (x *DiscountBalanceRequest) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DiscountBalanceRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DiscountIntegralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   int32 `protobuf:"zigzag32,1,opt,name=orderId,proto3" json:"orderId"`
	Integral  int64 `protobuf:"zigzag64,2,opt,name=integral,proto3" json:"integral"`
	IgnoreOut bool  `protobuf:"varint,3,opt,name=ignoreOut,proto3" json:"ignoreOut"`
}

func (x *DiscountIntegralRequest) Reset() {
	*x = DiscountIntegralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountIntegralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountIntegralRequest) ProtoMessage() {}

func (x *DiscountIntegralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountIntegralRequest.ProtoReflect.Descriptor instead.
func (*DiscountIntegralRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{2}
}

func (x *DiscountIntegralRequest) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DiscountIntegralRequest) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *DiscountIntegralRequest) GetIgnoreOut() bool {
	if x != nil {
		return x.IgnoreOut
	}
	return false
}

type WalletPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付交易单号
	TradeNo  string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	MergePay bool   `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *WalletPaymentRequest) Reset() {
	*x = WalletPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletPaymentRequest) ProtoMessage() {}

func (x *WalletPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletPaymentRequest.ProtoReflect.Descriptor instead.
func (*WalletPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{3}
}

func (x *WalletPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *WalletPaymentRequest) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

func (x *WalletPaymentRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type HyperPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付交易单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 备注
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *HyperPaymentRequest) Reset() {
	*x = HyperPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperPaymentRequest) ProtoMessage() {}

func (x *HyperPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperPaymentRequest.ProtoReflect.Descriptor instead.
func (*HyperPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{4}
}

func (x *HyperPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *HyperPaymentRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 完成交易请求
type FinishPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	PaymentOrderNo string `protobuf:"bytes,1,opt,name=paymentOrderNo,proto3" json:"paymentOrderNo"`
	// 支付方名称
	SpName string `protobuf:"bytes,2,opt,name=spName,proto3" json:"spName"`
	// 支付方交易流水号
	SpTradeNo string `protobuf:"bytes,3,opt,name=spTradeNo,proto3" json:"spTradeNo"`
}

func (x *FinishPaymentRequest) Reset() {
	*x = FinishPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishPaymentRequest) ProtoMessage() {}

func (x *FinishPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishPaymentRequest.ProtoReflect.Descriptor instead.
func (*FinishPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{5}
}

func (x *FinishPaymentRequest) GetPaymentOrderNo() string {
	if x != nil {
		return x.PaymentOrderNo
	}
	return ""
}

func (x *FinishPaymentRequest) GetSpName() string {
	if x != nil {
		return x.SpName
	}
	return ""
}

func (x *FinishPaymentRequest) GetSpTradeNo() string {
	if x != nil {
		return x.SpTradeNo
	}
	return ""
}

// 申请获取集成支付参数
type IntegrateParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	PayOrderNo string `protobuf:"bytes,1,opt,name=payOrderNo,proto3" json:"payOrderNo"`
	// 支付应用ID
	AppId int32 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId"`
}

func (x *IntegrateParamsRequest) Reset() {
	*x = IntegrateParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrateParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrateParamsRequest) ProtoMessage() {}

func (x *IntegrateParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrateParamsRequest.ProtoReflect.Descriptor instead.
func (*IntegrateParamsRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{6}
}

func (x *IntegrateParamsRequest) GetPayOrderNo() string {
	if x != nil {
		return x.PayOrderNo
	}
	return ""
}

func (x *IntegrateParamsRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// 集成支付参数响应
type IntegrateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 支付应用ID
	AppId int32 `protobuf:"varint,3,opt,name=appId,proto3" json:"appId"`
	// 支付应用名称
	AppName string `protobuf:"bytes,4,opt,name=appName,proto3" json:"appName"`
	// 支付应用请求地址
	AppUrl string `protobuf:"bytes,5,opt,name=appUrl,proto3" json:"appUrl"`
	// 服务,默认为pay
	Service string `protobuf:"bytes,6,opt,name=service,proto3" json:"service"`
	// 支付单号
	OrderNo string `protobuf:"bytes,7,opt,name=orderNo,proto3" json:"orderNo"`
	// 订单金额
	OrderAmount int32 `protobuf:"varint,8,opt,name=orderAmount,proto3" json:"orderAmount"`
	// 支付描述
	Subject string `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject"`
}

func (x *IntegrateParamsResponse) Reset() {
	*x = IntegrateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrateParamsResponse) ProtoMessage() {}

func (x *IntegrateParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrateParamsResponse.ProtoReflect.Descriptor instead.
func (*IntegrateParamsResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{7}
}

func (x *IntegrateParamsResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *IntegrateParamsResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *IntegrateParamsResponse) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *IntegrateParamsResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *IntegrateParamsResponse) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *IntegrateParamsResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *IntegrateParamsResponse) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *IntegrateParamsResponse) GetOrderAmount() int32 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *IntegrateParamsResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

// * 支付网关请求
type PayGatewayV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 是否合并支付
	MergePay bool `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
	// * 钱包抵扣
	WalletDiscount bool `protobuf:"varint,3,opt,name=walletDiscount,proto3" json:"walletDiscount"`
	// * 支付方式
	PayMethod int32 `protobuf:"varint,4,opt,name=payMethod,proto3" json:"payMethod"`
	// * 支付SP
	SpName string `protobuf:"bytes,5,opt,name=spName,proto3" json:"spName"`
}

func (x *PayGatewayV2Request) Reset() {
	*x = PayGatewayV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayV2Request) ProtoMessage() {}

func (x *PayGatewayV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayV2Request.ProtoReflect.Descriptor instead.
func (*PayGatewayV2Request) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{8}
}

func (x *PayGatewayV2Request) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayGatewayV2Request) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

func (x *PayGatewayV2Request) GetWalletDiscount() bool {
	if x != nil {
		return x.WalletDiscount
	}
	return false
}

func (x *PayGatewayV2Request) GetPayMethod() int32 {
	if x != nil {
		return x.PayMethod
	}
	return 0
}

func (x *PayGatewayV2Request) GetSpName() string {
	if x != nil {
		return x.SpName
	}
	return ""
}

// * 支付网关响应
type PayGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 代码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// * 消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// * 交易单号
	TradeNo string `protobuf:"bytes,3,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 是否已完成交易
	IsFinished bool `protobuf:"varint,4,opt,name=isFinished,proto3" json:"isFinished"`
	// 总金额
	TotalAmount int64 `protobuf:"varint,5,opt,name=totalAmount,proto3" json:"totalAmount"`
	// 交易费用
	TransactionFee int64 `protobuf:"varint,6,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 金额
	FinalAmount int64 `protobuf:"varint,7,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 支付表单
	PaymentForm string `protobuf:"bytes,8,opt,name=paymentForm,proto3" json:"paymentForm"`
}

func (x *PayGatewayResponse) Reset() {
	*x = PayGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayResponse) ProtoMessage() {}

func (x *PayGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayResponse.ProtoReflect.Descriptor instead.
func (*PayGatewayResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{9}
}

func (x *PayGatewayResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PayGatewayResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *PayGatewayResponse) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayGatewayResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *PayGatewayResponse) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PayGatewayResponse) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *PayGatewayResponse) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *PayGatewayResponse) GetPaymentForm() string {
	if x != nil {
		return x.PaymentForm
	}
	return ""
}

type OrderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo  string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	MergePay bool   `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
}

func (x *OrderInfoRequest) Reset() {
	*x = OrderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfoRequest) ProtoMessage() {}

func (x *OrderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfoRequest.ProtoReflect.Descriptor instead.
func (*OrderInfoRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{10}
}

func (x *OrderInfoRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *OrderInfoRequest) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

type MixedPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo string             `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	Data    []*SRequestPayData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *MixedPaymentRequest) Reset() {
	*x = MixedPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixedPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixedPaymentRequest) ProtoMessage() {}

func (x *MixedPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixedPaymentRequest.ProtoReflect.Descriptor instead.
func (*MixedPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{11}
}

func (x *MixedPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *MixedPaymentRequest) GetData() []*SRequestPayData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PayGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string            `protobuf:"bytes,1,opt,name=action,proto3" json:"action"`
	UserId int64             `protobuf:"zigzag64,2,opt,name=userId,proto3" json:"userId"`
	Data   map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PayGatewayRequest) Reset() {
	*x = PayGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayRequest) ProtoMessage() {}

func (x *PayGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayRequest.ProtoReflect.Descriptor instead.
func (*PayGatewayRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{12}
}

func (x *PayGatewayRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PayGatewayRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayGatewayRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// * 支付单
type SPaymentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 卖家编号
	SellerId int32 `protobuf:"zigzag32,2,opt,name=sellerId,proto3" json:"sellerId"`
	// * 交易类型
	TradeType string `protobuf:"bytes,3,opt,name=tradeType,proto3" json:"tradeType"`
	// * 合并支付交单单号
	MergeTradeNo string `protobuf:"bytes,4,opt,name=mergeTradeNo,proto3" json:"mergeTradeNo"`
	// * 支付单详情
	Subject string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject"`
	// * 是否为子订单
	SubOrder bool `protobuf:"varint,6,opt,name=subOrder,proto3" json:"subOrder"`
	// * 支付单的类型，如购物或其他
	OrderType int32 `protobuf:"zigzag32,7,opt,name=orderType,proto3" json:"orderType"`
	// * 关联订单号
	OutOrderNo string `protobuf:"bytes,8,opt,name=outOrderNo,proto3" json:"outOrderNo"`
	// * 买家编号
	BuyerId int64 `protobuf:"varint,9,opt,name=buyerId,proto3" json:"buyerId"`
	// * 支付用户编号
	PayerId int64 `protobuf:"varint,10,opt,name=payerId,proto3" json:"payerId"`
	// * 调整金额
	AdjustAmount int64 `protobuf:"varint,13,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// * 抵扣金额
	DeductAmount int64 `protobuf:"varint,14,opt,name=deductAmount,proto3" json:"deductAmount"`
	// * 共计金额
	TotalAmount int64 `protobuf:"varint,15,opt,name=totalAmount,proto3" json:"totalAmount"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,16,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 实付金额
	PaidAmount int64 `protobuf:"varint,17,opt,name=paidAmount,proto3" json:"paidAmount"`
	// * 最终应付金额
	FinalAmount int64 `protobuf:"varint,18,opt,name=finalAmount,proto3" json:"finalAmount"`
	// * 可⽤支付方式
	PayFlag int32 `protobuf:"varint,19,opt,name=payFlag,proto3" json:"payFlag"`
	// * 实际使用支付方式
	FinalFlag int32 `protobuf:"zigzag32,20,opt,name=finalFlag,proto3" json:"finalFlag"`
	// * 其他支付信息
	ExtraData string `protobuf:"bytes,21,opt,name=extraData,proto3" json:"extraData"`
	// * 订单状态
	Status int32 `protobuf:"zigzag32,22,opt,name=status,proto3" json:"status"`
	// * 提交时间
	SubmitTime int64 `protobuf:"zigzag64,23,opt,name=submitTime,proto3" json:"submitTime"`
	// * 过期时间
	ExpiresTime int64 `protobuf:"zigzag64,24,opt,name=expiresTime,proto3" json:"expiresTime"`
	// * 支付时间
	PaidTime int64 `protobuf:"zigzag64,25,opt,name=paidTime,proto3" json:"paidTime"`
	// * 交易数据
	TradeData []*STradeChanData `protobuf:"bytes,26,rep,name=tradeData,proto3" json:"tradeData"`
	// * 编号
	Id int32 `protobuf:"zigzag32,27,opt,name=id,proto3" json:"id"`
}

func (x *SPaymentOrder) Reset() {
	*x = SPaymentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPaymentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPaymentOrder) ProtoMessage() {}

func (x *SPaymentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPaymentOrder.ProtoReflect.Descriptor instead.
func (*SPaymentOrder) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{13}
}

func (x *SPaymentOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SPaymentOrder) GetSellerId() int32 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *SPaymentOrder) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *SPaymentOrder) GetMergeTradeNo() string {
	if x != nil {
		return x.MergeTradeNo
	}
	return ""
}

func (x *SPaymentOrder) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SPaymentOrder) GetSubOrder() bool {
	if x != nil {
		return x.SubOrder
	}
	return false
}

func (x *SPaymentOrder) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SPaymentOrder) GetOutOrderNo() string {
	if x != nil {
		return x.OutOrderNo
	}
	return ""
}

func (x *SPaymentOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SPaymentOrder) GetPayerId() int64 {
	if x != nil {
		return x.PayerId
	}
	return 0
}

func (x *SPaymentOrder) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SPaymentOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SPaymentOrder) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SPaymentOrder) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPaymentOrder) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *SPaymentOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SPaymentOrder) GetPayFlag() int32 {
	if x != nil {
		return x.PayFlag
	}
	return 0
}

func (x *SPaymentOrder) GetFinalFlag() int32 {
	if x != nil {
		return x.FinalFlag
	}
	return 0
}

func (x *SPaymentOrder) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

func (x *SPaymentOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SPaymentOrder) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *SPaymentOrder) GetExpiresTime() int64 {
	if x != nil {
		return x.ExpiresTime
	}
	return 0
}

func (x *SPaymentOrder) GetPaidTime() int64 {
	if x != nil {
		return x.PaidTime
	}
	return 0
}

func (x *SPaymentOrder) GetTradeData() []*STradeChanData {
	if x != nil {
		return x.TradeData
	}
	return nil
}

func (x *SPaymentOrder) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取支付单请求
type PaymentOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 允许在多店下单后需单独支付的支付单进行拆分
	AllowBreak bool `protobuf:"varint,2,opt,name=allowBreak,proto3" json:"allowBreak"`
}

func (x *PaymentOrderRequest) Reset() {
	*x = PaymentOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentOrderRequest) ProtoMessage() {}

func (x *PaymentOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentOrderRequest.ProtoReflect.Descriptor instead.
func (*PaymentOrderRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentOrderRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PaymentOrderRequest) GetAllowBreak() bool {
	if x != nil {
		return x.AllowBreak
	}
	return false
}

// * 请求支付数据
type SRequestPayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 支付方式
	Method int32 `protobuf:"zigzag32,1,opt,name=method,proto3" json:"method"`
	// * 支付方式代码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// * 支付金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
}

func (x *SRequestPayData) Reset() {
	*x = SRequestPayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRequestPayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRequestPayData) ProtoMessage() {}

func (x *SRequestPayData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRequestPayData.ProtoReflect.Descriptor instead.
func (*SRequestPayData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{15}
}

func (x *SRequestPayData) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *SRequestPayData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SRequestPayData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// * 交易方式数据
type STradeChanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 支付途径
	ChanId int32 `protobuf:"zigzag32,1,opt,name=chanId,proto3" json:"chanId"`
	// 方式描述
	ChanName string `protobuf:"bytes,2,opt,name=chanName,proto3" json:"chanName"`
	// * 交易代码
	ChanCode string `protobuf:"bytes,3,opt,name=chanCode,proto3" json:"chanCode"`
	// * 支付金额
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	// * 外部交易单号
	OutTradeNo string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo"`
}

func (x *STradeChanData) Reset() {
	*x = STradeChanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STradeChanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STradeChanData) ProtoMessage() {}

func (x *STradeChanData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STradeChanData.ProtoReflect.Descriptor instead.
func (*STradeChanData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{16}
}

func (x *STradeChanData) GetChanId() int32 {
	if x != nil {
		return x.ChanId
	}
	return 0
}

func (x *STradeChanData) GetChanName() string {
	if x != nil {
		return x.ChanName
	}
	return ""
}

func (x *STradeChanData) GetChanCode() string {
	if x != nil {
		return x.ChanCode
	}
	return ""
}

func (x *STradeChanData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *STradeChanData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

// * 支付单预交易数据
type SPrepareTradeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 错误码
	ErrCode int32 `protobuf:"zigzag32,1,opt,name=errCode,proto3" json:"errCode"`
	// * 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// * 交易号
	TradeNo string `protobuf:"bytes,3,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 支付标志
	PayFlag int32 `protobuf:"zigzag32,4,opt,name=payFlag,proto3" json:"payFlag"`
	// * 交易状态
	TradeStatus int32 `protobuf:"zigzag32,5,opt,name=tradeStatus,proto3" json:"tradeStatus"`
	// * 交易订单
	TradeOrders []*SPaymentOrderData `protobuf:"bytes,6,rep,name=tradeOrders,proto3" json:"tradeOrders"`
	// * 累计金额
	TotalAmount int64 `protobuf:"varint,7,opt,name=totalAmount,proto3" json:"totalAmount"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,8,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 最终支付金额
	FinalAmount int64 `protobuf:"varint,9,opt,name=finalAmount,proto3" json:"finalAmount"`
}

func (x *SPrepareTradeData) Reset() {
	*x = SPrepareTradeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareTradeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareTradeData) ProtoMessage() {}

func (x *SPrepareTradeData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareTradeData.ProtoReflect.Descriptor instead.
func (*SPrepareTradeData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{17}
}

func (x *SPrepareTradeData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SPrepareTradeData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SPrepareTradeData) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SPrepareTradeData) GetPayFlag() int32 {
	if x != nil {
		return x.PayFlag
	}
	return 0
}

func (x *SPrepareTradeData) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *SPrepareTradeData) GetTradeOrders() []*SPaymentOrderData {
	if x != nil {
		return x.TradeOrders
	}
	return nil
}

func (x *SPrepareTradeData) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SPrepareTradeData) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPrepareTradeData) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

// * 支付单数据
type SPaymentOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// * 标题
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject"`
	// * 交易类型
	TradeType string `protobuf:"bytes,3,opt,name=tradeType,proto3" json:"tradeType"`
	// * 状态
	Status int32 `protobuf:"zigzag32,4,opt,name=status,proto3" json:"status"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,5,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 最终支付金额
	FinalAmount int64 `protobuf:"varint,6,opt,name=finalAmount,proto3" json:"finalAmount"`
}

func (x *SPaymentOrderData) Reset() {
	*x = SPaymentOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPaymentOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPaymentOrderData) ProtoMessage() {}

func (x *SPaymentOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPaymentOrderData.ProtoReflect.Descriptor instead.
func (*SPaymentOrderData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{18}
}

func (x *SPaymentOrderData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPaymentOrderData) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SPaymentOrderData) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *SPaymentOrderData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SPaymentOrderData) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPaymentOrderData) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

// * 集成支付应用编号
type PayIntegrateAppId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *PayIntegrateAppId) Reset() {
	*x = PayIntegrateAppId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayIntegrateAppId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayIntegrateAppId) ProtoMessage() {}

func (x *PayIntegrateAppId) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayIntegrateAppId.ProtoReflect.Descriptor instead.
func (*PayIntegrateAppId) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{19}
}

func (x *PayIntegrateAppId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// * 查询集成支付应用响应
type QueryIntegrateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SIntegrateApp `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *QueryIntegrateAppResponse) Reset() {
	*x = QueryIntegrateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrateAppResponse) ProtoMessage() {}

func (x *QueryIntegrateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrateAppResponse.ProtoReflect.Descriptor instead.
func (*QueryIntegrateAppResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{20}
}

func (x *QueryIntegrateAppResponse) GetValue() []*SIntegrateApp {
	if x != nil {
		return x.Value
	}
	return nil
}

// * 集成支付应用
type SIntegrateApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 编号
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 支付应用名称
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName"`
	// * 支付应用接口
	AppUrl string `protobuf:"bytes,3,opt,name=appUrl,proto3" json:"appUrl"`
	// * 集成类型: 1:API调用(密码验证) 2: 跳转 3:直接唤起
	IntegrateType int32 `protobuf:"varint,4,opt,name=integrateType,proto3" json:"integrateType"`
	// * 显示顺序
	SortNumber int32 `protobuf:"varint,5,opt,name=sortNumber,proto3" json:"sortNumber"`
	// * 是否启用
	Enabled int32 `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled"`
	// * 支付提示信息
	Hint string `protobuf:"bytes,7,opt,name=hint,proto3" json:"hint"`
	// * 是否高亮显示
	Highlight int32 `protobuf:"varint,8,opt,name=highlight,proto3" json:"highlight"`
}

func (x *SIntegrateApp) Reset() {
	*x = SIntegrateApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SIntegrateApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SIntegrateApp) ProtoMessage() {}

func (x *SIntegrateApp) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SIntegrateApp.ProtoReflect.Descriptor instead.
func (*SIntegrateApp) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{21}
}

func (x *SIntegrateApp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SIntegrateApp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SIntegrateApp) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *SIntegrateApp) GetIntegrateType() int32 {
	if x != nil {
		return x.IntegrateType
	}
	return 0
}

func (x *SIntegrateApp) GetSortNumber() int32 {
	if x != nil {
		return x.SortNumber
	}
	return 0
}

func (x *SIntegrateApp) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SIntegrateApp) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *SIntegrateApp) GetHighlight() int32 {
	if x != nil {
		return x.Highlight
	}
	return 0
}

// 支付分账请求
type PaymentDivideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 外部交易单号
	OutTxNo string `protobuf:"bytes,1,opt,name=outTxNo,proto3" json:"outTxNo"`
	// 分账明细
	SubDivides []*SPaymentSubDivide `protobuf:"bytes,2,rep,name=subDivides,proto3" json:"subDivides"`
}

func (x *PaymentDivideRequest) Reset() {
	*x = PaymentDivideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentDivideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDivideRequest) ProtoMessage() {}

func (x *PaymentDivideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDivideRequest.ProtoReflect.Descriptor instead.
func (*PaymentDivideRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{22}
}

func (x *PaymentDivideRequest) GetOutTxNo() string {
	if x != nil {
		return x.OutTxNo
	}
	return ""
}

func (x *PaymentDivideRequest) GetSubDivides() []*SPaymentSubDivide {
	if x != nil {
		return x.SubDivides
	}
	return nil
}

// 支付单分账子单,一次分账可能涉及多个支付单
type SPaymentSubDivide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 分账明细
	Divides []*SDivideData `protobuf:"bytes,3,rep,name=divides,proto3" json:"divides"`
}

func (x *SPaymentSubDivide) Reset() {
	*x = SPaymentSubDivide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPaymentSubDivide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPaymentSubDivide) ProtoMessage() {}

func (x *SPaymentSubDivide) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPaymentSubDivide.ProtoReflect.Descriptor instead.
func (*SPaymentSubDivide) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{23}
}

func (x *SPaymentSubDivide) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SPaymentSubDivide) GetDivides() []*SDivideData {
	if x != nil {
		return x.Divides
	}
	return nil
}

// 分账数据
type SDivideData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分账用户类型: 1: 平台  2: 商户  3: 会员
	DivideType int32 `protobuf:"varint,1,opt,name=divideType,proto3" json:"divideType"`
	// 用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	// 分账金额
	DivideAmount int64 `protobuf:"varint,3,opt,name=divideAmount,proto3" json:"divideAmount"`
}

func (x *SDivideData) Reset() {
	*x = SDivideData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDivideData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDivideData) ProtoMessage() {}

func (x *SDivideData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDivideData.ProtoReflect.Descriptor instead.
func (*SDivideData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{24}
}

func (x *SDivideData) GetDivideType() int32 {
	if x != nil {
		return x.DivideType
	}
	return 0
}

func (x *SDivideData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SDivideData) GetDivideAmount() int64 {
	if x != nil {
		return x.DivideAmount
	}
	return 0
}

// 查询可用于分账的订单请求
type DivideOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员ID
	MemberId int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
	// 支付单类型
	OrderType int32 `protobuf:"varint,2,opt,name=orderType,proto3" json:"orderType"`
}

func (x *DivideOrdersRequest) Reset() {
	*x = DivideOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivideOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideOrdersRequest) ProtoMessage() {}

func (x *DivideOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideOrdersRequest.ProtoReflect.Descriptor instead.
func (*DivideOrdersRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{25}
}

func (x *DivideOrdersRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *DivideOrdersRequest) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

// 分账订单信息
type SDivideOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 可分账金额
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	// 已分账金额
	DividedAmount int64 `protobuf:"varint,3,opt,name=dividedAmount,proto3" json:"dividedAmount"`
	// 分账状态
	DivideStatus int32 `protobuf:"varint,4,opt,name=divideStatus,proto3" json:"divideStatus"`
	// 支付单创建时间
	CreateTime int64 `protobuf:"zigzag64,5,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SDivideOrderInfo) Reset() {
	*x = SDivideOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDivideOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDivideOrderInfo) ProtoMessage() {}

func (x *SDivideOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDivideOrderInfo.ProtoReflect.Descriptor instead.
func (*SDivideOrderInfo) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{26}
}

func (x *SDivideOrderInfo) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SDivideOrderInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SDivideOrderInfo) GetDividedAmount() int64 {
	if x != nil {
		return x.DividedAmount
	}
	return 0
}

func (x *SDivideOrderInfo) GetDivideStatus() int32 {
	if x != nil {
		return x.DivideStatus
	}
	return 0
}

func (x *SDivideOrderInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 分账订单响应
type DivideOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*SDivideOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders"`
}

func (x *DivideOrdersResponse) Reset() {
	*x = DivideOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivideOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideOrdersResponse) ProtoMessage() {}

func (x *DivideOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideOrdersResponse.ProtoReflect.Descriptor instead.
func (*DivideOrdersResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{27}
}

func (x *DivideOrdersResponse) GetOrders() []*SDivideOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

// 更新分账状态请求
type UpdateDivideStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单编号
	PayId int64 `protobuf:"varint,1,opt,name=payId,proto3" json:"payId"`
	// 分账编号
	DivideId int64 `protobuf:"varint,2,opt,name=divideId,proto3" json:"divideId"`
	// 是否成功
	Success bool `protobuf:"varint,3,opt,name=success,proto3" json:"success"`
	// 分账单号
	DivideNo string `protobuf:"bytes,4,opt,name=divideNo,proto3" json:"divideNo"`
	// 备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
}

func (x *UpdateDivideStatusRequest) Reset() {
	*x = UpdateDivideStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDivideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDivideStatusRequest) ProtoMessage() {}

func (x *UpdateDivideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDivideStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDivideStatusRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDivideStatusRequest) GetPayId() int64 {
	if x != nil {
		return x.PayId
	}
	return 0
}

func (x *UpdateDivideStatusRequest) GetDivideId() int64 {
	if x != nil {
		return x.DivideId
	}
	return 0
}

func (x *UpdateDivideStatusRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDivideStatusRequest) GetDivideNo() string {
	if x != nil {
		return x.DivideNo
	}
	return ""
}

func (x *UpdateDivideStatusRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 支付分账子项撤销请求
type PaymentSubDivideRevertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单编号
	PayId int64 `protobuf:"varint,1,opt,name=payId,proto3" json:"payId"`
	// 分账编号
	DivideId int64 `protobuf:"varint,2,opt,name=divideId,proto3" json:"divideId"`
	// 撤销原因
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason"`
}

func (x *PaymentSubDivideRevertRequest) Reset() {
	*x = PaymentSubDivideRevertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSubDivideRevertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSubDivideRevertRequest) ProtoMessage() {}

func (x *PaymentSubDivideRevertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSubDivideRevertRequest.ProtoReflect.Descriptor instead.
func (*PaymentSubDivideRevertRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{29}
}

func (x *PaymentSubDivideRevertRequest) GetPayId() int64 {
	if x != nil {
		return x.PayId
	}
	return 0
}

func (x *PaymentSubDivideRevertRequest) GetDivideId() int64 {
	if x != nil {
		return x.DivideId
	}
	return 0
}

func (x *PaymentSubDivideRevertRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 支付分账成功请求
type PaymentDivideSuccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单编号
	PayId int64 `protobuf:"varint,1,opt,name=payId,proto3" json:"payId"`
	// 外部交易单号
	OutTxNo string `protobuf:"bytes,2,opt,name=outTxNo,proto3" json:"outTxNo"`
}

func (x *PaymentDivideSuccessRequest) Reset() {
	*x = PaymentDivideSuccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentDivideSuccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDivideSuccessRequest) ProtoMessage() {}

func (x *PaymentDivideSuccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDivideSuccessRequest.ProtoReflect.Descriptor instead.
func (*PaymentDivideSuccessRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{30}
}

func (x *PaymentDivideSuccessRequest) GetPayId() int64 {
	if x != nil {
		return x.PayId
	}
	return 0
}

func (x *PaymentDivideSuccessRequest) GetOutTxNo() string {
	if x != nil {
		return x.OutTxNo
	}
	return ""
}

// 支付退款请求
type PaymentRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 退款金额
	RefundAmount int64 `protobuf:"varint,2,opt,name=refundAmount,proto3" json:"refundAmount"`
	// 退款原因
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason"`
}

func (x *PaymentRefundRequest) Reset() {
	*x = PaymentRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRefundRequest) ProtoMessage() {}

func (x *PaymentRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRefundRequest.ProtoReflect.Descriptor instead.
func (*PaymentRefundRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{31}
}

func (x *PaymentRefundRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PaymentRefundRequest) GetRefundAmount() int64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *PaymentRefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 支付退款请求
type PaymentRefundAvailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 退款备注
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *PaymentRefundAvailRequest) Reset() {
	*x = PaymentRefundAvailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRefundAvailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRefundAvailRequest) ProtoMessage() {}

func (x *PaymentRefundAvailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRefundAvailRequest.ProtoReflect.Descriptor instead.
func (*PaymentRefundAvailRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{32}
}

func (x *PaymentRefundAvailRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PaymentRefundAvailRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 支付退款响应
type PaymentRefundAvailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// 错误消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	// 实际支付金额
	FinalAmount int64 `protobuf:"varint,3,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 退款金额
	RefundAmount int64 `protobuf:"varint,4,opt,name=refundAmount,proto3" json:"refundAmount"`
}

func (x *PaymentRefundAvailResponse) Reset() {
	*x = PaymentRefundAvailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRefundAvailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRefundAvailResponse) ProtoMessage() {}

func (x *PaymentRefundAvailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRefundAvailResponse.ProtoReflect.Descriptor instead.
func (*PaymentRefundAvailResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{33}
}

func (x *PaymentRefundAvailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentRefundAvailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentRefundAvailResponse) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *PaymentRefundAvailResponse) GetRefundAmount() int64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

// 支付补款退款请求
type PaymentSupplementRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 会员退款交易ID
	TxId int64 `protobuf:"varint,2,opt,name=txId,proto3" json:"txId"`
}

func (x *PaymentSupplementRefundRequest) Reset() {
	*x = PaymentSupplementRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSupplementRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSupplementRefundRequest) ProtoMessage() {}

func (x *PaymentSupplementRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSupplementRefundRequest.ProtoReflect.Descriptor instead.
func (*PaymentSupplementRefundRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{34}
}

func (x *PaymentSupplementRefundRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PaymentSupplementRefundRequest) GetTxId() int64 {
	if x != nil {
		return x.TxId
	}
	return 0
}

// 查询可退款支付单请求
type QueryRefundablePaymentOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员ID
	MemberId int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
}

func (x *QueryRefundablePaymentOrdersRequest) Reset() {
	*x = QueryRefundablePaymentOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRefundablePaymentOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRefundablePaymentOrdersRequest) ProtoMessage() {}

func (x *QueryRefundablePaymentOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRefundablePaymentOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryRefundablePaymentOrdersRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{35}
}

func (x *QueryRefundablePaymentOrdersRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 可退款支付单响应
type RefundablePaymentOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*RefundablePaymentOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders"`
}

func (x *RefundablePaymentOrdersResponse) Reset() {
	*x = RefundablePaymentOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundablePaymentOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundablePaymentOrdersResponse) ProtoMessage() {}

func (x *RefundablePaymentOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundablePaymentOrdersResponse.ProtoReflect.Descriptor instead.
func (*RefundablePaymentOrdersResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{36}
}

func (x *RefundablePaymentOrdersResponse) GetOrders() []*RefundablePaymentOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// 可退款支付单
type RefundablePaymentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 可退款金额
	RefundableAmount int64 `protobuf:"varint,2,opt,name=refundableAmount,proto3" json:"refundableAmount"`
}

func (x *RefundablePaymentOrder) Reset() {
	*x = RefundablePaymentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundablePaymentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundablePaymentOrder) ProtoMessage() {}

func (x *RefundablePaymentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundablePaymentOrder.ProtoReflect.Descriptor instead.
func (*RefundablePaymentOrder) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{37}
}

func (x *RefundablePaymentOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *RefundablePaymentOrder) GetRefundableAmount() int64 {
	if x != nil {
		return x.RefundableAmount
	}
	return 0
}

// 商户入网申请单编号请求
type SubMerchantCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 申请单编号
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *SubMerchantCodeRequest) Reset() {
	*x = SubMerchantCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubMerchantCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMerchantCodeRequest) ProtoMessage() {}

func (x *SubMerchantCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMerchantCodeRequest.ProtoReflect.Descriptor instead.
func (*SubMerchantCodeRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{38}
}

func (x *SubMerchantCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 初始化商户入网请求
type SubMerchantInitialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户类型 1:会员  2:商户
	UserType int32 `protobuf:"varint,1,opt,name=userType,proto3" json:"userType"`
	// 用户编号
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
}

func (x *SubMerchantInitialRequest) Reset() {
	*x = SubMerchantInitialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubMerchantInitialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMerchantInitialRequest) ProtoMessage() {}

func (x *SubMerchantInitialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMerchantInitialRequest.ProtoReflect.Descriptor instead.
func (*SubMerchantInitialRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{39}
}

func (x *SubMerchantInitialRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *SubMerchantInitialRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新商户入网状态请求
type SubMerchantUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 申请单编号
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	// 状态
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	// 备注
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
	// 商户编码
	MerchantCode string `protobuf:"bytes,4,opt,name=merchantCode,proto3" json:"merchantCode"`
	// 协议签署地址
	AgreementSignUrl string `protobuf:"bytes,5,opt,name=agreementSignUrl,proto3" json:"agreementSignUrl"`
}

func (x *SubMerchantUpdateRequest) Reset() {
	*x = SubMerchantUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubMerchantUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMerchantUpdateRequest) ProtoMessage() {}

func (x *SubMerchantUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMerchantUpdateRequest.ProtoReflect.Descriptor instead.
func (*SubMerchantUpdateRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{40}
}

func (x *SubMerchantUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SubMerchantUpdateRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SubMerchantUpdateRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SubMerchantUpdateRequest) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *SubMerchantUpdateRequest) GetAgreementSignUrl() string {
	if x != nil {
		return x.AgreementSignUrl
	}
	return ""
}

// 支付入网子商户
type SSubMerchant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 申请单编号
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 用户类型 1:会员  2:商户
	UserType int32 `protobuf:"varint,3,opt,name=userType,proto3" json:"userType"`
	// 用户编号
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId"`
	// 商户类型 1:企业/个体  2:小微(个人)
	MchType int32 `protobuf:"varint,5,opt,name=mchType,proto3" json:"mchType"`
	// 商户角色 1:标准商户  2: 平台商 3: 平台商子商户 4: 分账接收方
	MchRole int32 `protobuf:"varint,6,opt,name=mchRole,proto3" json:"mchRole"`
	// 商户证件照片地址
	LicencePic string `protobuf:"bytes,7,opt,name=licencePic,proto3" json:"licencePic"`
	// 商户签约名,与商户证件主体名称一致。
	SignName string `protobuf:"bytes,8,opt,name=signName,proto3" json:"signName"`
	// 商户签约类型  1: 个体  2: 企业   3: 事业单位  4: 社会团体, 5:民办非企业
	SignType int32 `protobuf:"varint,9,opt,name=signType,proto3" json:"signType"`
	// 商户证件号码
	LicenceNo string `protobuf:"bytes,10,opt,name=licenceNo,proto3" json:"licenceNo"`
	// 商户简称
	ShortName string `protobuf:"bytes,11,opt,name=shortName,proto3" json:"shortName"`
	// 银行账户信息表图片
	AccountLicencePic string `protobuf:"bytes,12,opt,name=accountLicencePic,proto3" json:"accountLicencePic"`
	// 法人名称
	LegalName string `protobuf:"bytes,13,opt,name=legalName,proto3" json:"legalName"`
	// 法人证件类型 1: 身份证 2: 永久居留身份证 3: 护照  4:港澳通行证  5: 台胞证
	LegalLicenceType int32 `protobuf:"varint,14,opt,name=legalLicenceType,proto3" json:"legalLicenceType"`
	// 法人证件编号
	LegalLicenceNo string `protobuf:"bytes,15,opt,name=legalLicenceNo,proto3" json:"legalLicenceNo"`
	// 法人证件正面照片地址
	LegalFrontPic string `protobuf:"bytes,16,opt,name=legalFrontPic,proto3" json:"legalFrontPic"`
	// 法人证件背面照片地址
	LegalBackPic string `protobuf:"bytes,17,opt,name=legalBackPic,proto3" json:"legalBackPic"`
	// 联系人姓名
	ContactName string `protobuf:"bytes,18,opt,name=contactName,proto3" json:"contactName"`
	// 联系人手机号
	ContactPhone string `protobuf:"bytes,19,opt,name=contactPhone,proto3" json:"contactPhone"`
	// 联系人邮箱
	ContactEmail string `protobuf:"bytes,20,opt,name=contactEmail,proto3" json:"contactEmail"`
	// 联系人证件号码
	ContactLicenceNo string `protobuf:"bytes,21,opt,name=contactLicenceNo,proto3" json:"contactLicenceNo"`
	// 商户后台管理员邮箱
	AccountEmail string `protobuf:"bytes,22,opt,name=accountEmail,proto3" json:"accountEmail"`
	// 商户后台管理员手机号
	AccountPhone string `protobuf:"bytes,23,opt,name=accountPhone,proto3" json:"accountPhone"`
	// 一级行业分类编码
	PrimaryIndustryCode string `protobuf:"bytes,24,opt,name=primaryIndustryCode,proto3" json:"primaryIndustryCode"`
	// 二级行业分类编码
	SecondaryIndustryCode string `protobuf:"bytes,25,opt,name=secondaryIndustryCode,proto3" json:"secondaryIndustryCode"`
	// 经营省
	ProvinceCode int32 `protobuf:"varint,26,opt,name=provinceCode,proto3" json:"provinceCode"`
	// 经营市
	CityCode int32 `protobuf:"varint,27,opt,name=cityCode,proto3" json:"cityCode"`
	// 经营区
	DistrictCode int32 `protobuf:"varint,28,opt,name=districtCode,proto3" json:"districtCode"`
	// 经营地址
	Address string `protobuf:"bytes,29,opt,name=address,proto3" json:"address"`
	// 结算方向 1: 支付账户  2:公户
	SettleDirection int32 `protobuf:"varint,30,opt,name=settleDirection,proto3" json:"settleDirection"`
	// 开户总行编码
	SettleBankCode string `protobuf:"bytes,31,opt,name=settleBankCode,proto3" json:"settleBankCode"`
	// 银行账户类型
	SettleAccountType int32 `protobuf:"varint,32,opt,name=settleAccountType,proto3" json:"settleAccountType"`
	// 银行账户号码
	SettleBankAccount string `protobuf:"bytes,33,opt,name=settleBankAccount,proto3" json:"settleBankAccount"`
	// 下发商户编号
	IssueMchNo string `protobuf:"bytes,34,opt,name=issueMchNo,proto3" json:"issueMchNo"`
	// 协议签署地址
	AgreementSignUrl string `protobuf:"bytes,35,opt,name=agreementSignUrl,proto3" json:"agreementSignUrl"`
	// 入网状态 1: 审核中  2: 被驳回 3: 待签署协议 4: 开通中 5: 已开通
	IssueStatus int32 `protobuf:"varint,36,opt,name=issueStatus,proto3" json:"issueStatus"`
	// 入网结果信息
	IssueMessage string `protobuf:"bytes,37,opt,name=issueMessage,proto3" json:"issueMessage"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,38,opt,name=createTime,proto3" json:"createTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,39,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SSubMerchant) Reset() {
	*x = SSubMerchant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSubMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSubMerchant) ProtoMessage() {}

func (x *SSubMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSubMerchant.ProtoReflect.Descriptor instead.
func (*SSubMerchant) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{41}
}

func (x *SSubMerchant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SSubMerchant) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SSubMerchant) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *SSubMerchant) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SSubMerchant) GetMchType() int32 {
	if x != nil {
		return x.MchType
	}
	return 0
}

func (x *SSubMerchant) GetMchRole() int32 {
	if x != nil {
		return x.MchRole
	}
	return 0
}

func (x *SSubMerchant) GetLicencePic() string {
	if x != nil {
		return x.LicencePic
	}
	return ""
}

func (x *SSubMerchant) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *SSubMerchant) GetSignType() int32 {
	if x != nil {
		return x.SignType
	}
	return 0
}

func (x *SSubMerchant) GetLicenceNo() string {
	if x != nil {
		return x.LicenceNo
	}
	return ""
}

func (x *SSubMerchant) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *SSubMerchant) GetAccountLicencePic() string {
	if x != nil {
		return x.AccountLicencePic
	}
	return ""
}

func (x *SSubMerchant) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *SSubMerchant) GetLegalLicenceType() int32 {
	if x != nil {
		return x.LegalLicenceType
	}
	return 0
}

func (x *SSubMerchant) GetLegalLicenceNo() string {
	if x != nil {
		return x.LegalLicenceNo
	}
	return ""
}

func (x *SSubMerchant) GetLegalFrontPic() string {
	if x != nil {
		return x.LegalFrontPic
	}
	return ""
}

func (x *SSubMerchant) GetLegalBackPic() string {
	if x != nil {
		return x.LegalBackPic
	}
	return ""
}

func (x *SSubMerchant) GetContactName() string {
	if x != nil {
		return x.ContactName
	}
	return ""
}

func (x *SSubMerchant) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *SSubMerchant) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *SSubMerchant) GetContactLicenceNo() string {
	if x != nil {
		return x.ContactLicenceNo
	}
	return ""
}

func (x *SSubMerchant) GetAccountEmail() string {
	if x != nil {
		return x.AccountEmail
	}
	return ""
}

func (x *SSubMerchant) GetAccountPhone() string {
	if x != nil {
		return x.AccountPhone
	}
	return ""
}

func (x *SSubMerchant) GetPrimaryIndustryCode() string {
	if x != nil {
		return x.PrimaryIndustryCode
	}
	return ""
}

func (x *SSubMerchant) GetSecondaryIndustryCode() string {
	if x != nil {
		return x.SecondaryIndustryCode
	}
	return ""
}

func (x *SSubMerchant) GetProvinceCode() int32 {
	if x != nil {
		return x.ProvinceCode
	}
	return 0
}

func (x *SSubMerchant) GetCityCode() int32 {
	if x != nil {
		return x.CityCode
	}
	return 0
}

func (x *SSubMerchant) GetDistrictCode() int32 {
	if x != nil {
		return x.DistrictCode
	}
	return 0
}

func (x *SSubMerchant) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SSubMerchant) GetSettleDirection() int32 {
	if x != nil {
		return x.SettleDirection
	}
	return 0
}

func (x *SSubMerchant) GetSettleBankCode() string {
	if x != nil {
		return x.SettleBankCode
	}
	return ""
}

func (x *SSubMerchant) GetSettleAccountType() int32 {
	if x != nil {
		return x.SettleAccountType
	}
	return 0
}

func (x *SSubMerchant) GetSettleBankAccount() string {
	if x != nil {
		return x.SettleBankAccount
	}
	return ""
}

func (x *SSubMerchant) GetIssueMchNo() string {
	if x != nil {
		return x.IssueMchNo
	}
	return ""
}

func (x *SSubMerchant) GetAgreementSignUrl() string {
	if x != nil {
		return x.AgreementSignUrl
	}
	return ""
}

func (x *SSubMerchant) GetIssueStatus() int32 {
	if x != nil {
		return x.IssueStatus
	}
	return 0
}

func (x *SSubMerchant) GetIssueMessage() string {
	if x != nil {
		return x.IssueMessage
	}
	return ""
}

func (x *SSubMerchant) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SSubMerchant) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_payment_service_proto protoreflect.FileDescriptor

var file_payment_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x6d, 0x0a,
	0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x64, 0x0a, 0x14,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x47, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x74, 0x0a, 0x14, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x22, 0x4e, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x22, 0x83, 0x02, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x22, 0x48, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x22, 0x55,
	0x0a, 0x13, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x06, 0x0a, 0x0d, 0x53, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08,
	0x70, 0x61, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x55, 0x0a, 0x0f, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x98, 0x01, 0x0a, 0x0e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x11, 0x53,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x53,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x41, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69,
	0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x64, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x44, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x73, 0x22, 0x55,
	0x0a, 0x11, 0x53, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x44, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x26, 0x0a,
	0x07, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x53, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0b, 0x53, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4f, 0x0a, 0x13, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x53, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x41, 0x0a, 0x14, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x69, 0x0a, 0x1d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4d,
	0x0a, 0x1b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x22, 0x6c, 0x0a,
	0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x19, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a,
	0x1e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x41, 0x0a,
	0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x1f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x5e, 0x0a, 0x16, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x72, 0x6c, 0x22, 0xdc, 0x0a, 0x0a, 0x0c, 0x53, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x63, 0x68, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x69, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x69,
	0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x69, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x69, 0x63, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x63, 0x68, 0x4e, 0x6f, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x63, 0x68, 0x4e,
	0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x2a, 0xaa, 0x01, 0x0a, 0x0a, 0x45, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x5f, 0x45, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x53, 0x50,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x10, 0x20, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x68, 0x10,
	0x40, 0x12, 0x0d, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x10, 0x80, 0x01,
	0x12, 0x0e, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x10, 0x80, 0x02,
	0x12, 0x0e, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x10, 0x80, 0x04,
	0x32, 0x8c, 0x0e, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x53, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x0b, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x11,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x17, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x18, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x33, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0d, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x74, 0x53, 0x75, 0x62, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x12, 0x17, 0x2e, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x53,
	0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x12, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x12, 0x1a, 0x2e, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x53, 0x53,
	0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x53, 0x75, 0x62,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5f, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x10,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x12, 0x1f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x09,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x31, 0x12, 0x12, 0x2e, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x11, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x09, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x56, 0x32, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x50, 0x61,
	0x79, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0c, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x2e, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2d, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x2e, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3b, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1a, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x12, 0x12, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f,
	0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payment_service_proto_rawDescOnce sync.Once
	file_payment_service_proto_rawDescData = file_payment_service_proto_rawDesc
)

func file_payment_service_proto_rawDescGZIP() []byte {
	file_payment_service_proto_rawDescOnce.Do(func() {
		file_payment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_service_proto_rawDescData)
	})
	return file_payment_service_proto_rawDescData
}

var file_payment_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_payment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_payment_service_proto_goTypes = []interface{}{
	(EPayMethod)(0),                             // 0: EPayMethod
	(*AdjustOrderRequest)(nil),                  // 1: AdjustOrderRequest
	(*DiscountBalanceRequest)(nil),              // 2: DiscountBalanceRequest
	(*DiscountIntegralRequest)(nil),             // 3: DiscountIntegralRequest
	(*WalletPaymentRequest)(nil),                // 4: WalletPaymentRequest
	(*HyperPaymentRequest)(nil),                 // 5: HyperPaymentRequest
	(*FinishPaymentRequest)(nil),                // 6: FinishPaymentRequest
	(*IntegrateParamsRequest)(nil),              // 7: IntegrateParamsRequest
	(*IntegrateParamsResponse)(nil),             // 8: IntegrateParamsResponse
	(*PayGatewayV2Request)(nil),                 // 9: PayGatewayV2Request
	(*PayGatewayResponse)(nil),                  // 10: PayGatewayResponse
	(*OrderInfoRequest)(nil),                    // 11: OrderInfoRequest
	(*MixedPaymentRequest)(nil),                 // 12: MixedPaymentRequest
	(*PayGatewayRequest)(nil),                   // 13: PayGatewayRequest
	(*SPaymentOrder)(nil),                       // 14: SPaymentOrder
	(*PaymentOrderRequest)(nil),                 // 15: PaymentOrderRequest
	(*SRequestPayData)(nil),                     // 16: SRequestPayData
	(*STradeChanData)(nil),                      // 17: STradeChanData
	(*SPrepareTradeData)(nil),                   // 18: SPrepareTradeData
	(*SPaymentOrderData)(nil),                   // 19: SPaymentOrderData
	(*PayIntegrateAppId)(nil),                   // 20: PayIntegrateAppId
	(*QueryIntegrateAppResponse)(nil),           // 21: QueryIntegrateAppResponse
	(*SIntegrateApp)(nil),                       // 22: SIntegrateApp
	(*PaymentDivideRequest)(nil),                // 23: PaymentDivideRequest
	(*SPaymentSubDivide)(nil),                   // 24: SPaymentSubDivide
	(*SDivideData)(nil),                         // 25: SDivideData
	(*DivideOrdersRequest)(nil),                 // 26: DivideOrdersRequest
	(*SDivideOrderInfo)(nil),                    // 27: SDivideOrderInfo
	(*DivideOrdersResponse)(nil),                // 28: DivideOrdersResponse
	(*UpdateDivideStatusRequest)(nil),           // 29: UpdateDivideStatusRequest
	(*PaymentSubDivideRevertRequest)(nil),       // 30: PaymentSubDivideRevertRequest
	(*PaymentDivideSuccessRequest)(nil),         // 31: PaymentDivideSuccessRequest
	(*PaymentRefundRequest)(nil),                // 32: PaymentRefundRequest
	(*PaymentRefundAvailRequest)(nil),           // 33: PaymentRefundAvailRequest
	(*PaymentRefundAvailResponse)(nil),          // 34: PaymentRefundAvailResponse
	(*PaymentSupplementRefundRequest)(nil),      // 35: PaymentSupplementRefundRequest
	(*QueryRefundablePaymentOrdersRequest)(nil), // 36: QueryRefundablePaymentOrdersRequest
	(*RefundablePaymentOrdersResponse)(nil),     // 37: RefundablePaymentOrdersResponse
	(*RefundablePaymentOrder)(nil),              // 38: RefundablePaymentOrder
	(*SubMerchantCodeRequest)(nil),              // 39: SubMerchantCodeRequest
	(*SubMerchantInitialRequest)(nil),           // 40: SubMerchantInitialRequest
	(*SubMerchantUpdateRequest)(nil),            // 41: SubMerchantUpdateRequest
	(*SSubMerchant)(nil),                        // 42: SSubMerchant
	nil,                                         // 43: PayGatewayRequest.DataEntry
	(*Empty)(nil),                               // 44: Empty
	(*TxResult)(nil),                            // 45: TxResult
}
var file_payment_service_proto_depIdxs = []int32{
	16, // 0: MixedPaymentRequest.data:type_name -> SRequestPayData
	43, // 1: PayGatewayRequest.data:type_name -> PayGatewayRequest.DataEntry
	17, // 2: SPaymentOrder.tradeData:type_name -> STradeChanData
	19, // 3: SPrepareTradeData.tradeOrders:type_name -> SPaymentOrderData
	22, // 4: QueryIntegrateAppResponse.value:type_name -> SIntegrateApp
	24, // 5: PaymentDivideRequest.subDivides:type_name -> SPaymentSubDivide
	25, // 6: SPaymentSubDivide.divides:type_name -> SDivideData
	27, // 7: DivideOrdersResponse.orders:type_name -> SDivideOrderInfo
	38, // 8: RefundablePaymentOrdersResponse.orders:type_name -> RefundablePaymentOrder
	14, // 9: PaymentService.SubmitPaymentOrder:input_type -> SPaymentOrder
	15, // 10: PaymentService.GetPaymentOrder:input_type -> PaymentOrderRequest
	1,  // 11: PaymentService.AdjustOrder:input_type -> AdjustOrderRequest
	2,  // 12: PaymentService.DiscountByBalance:input_type -> DiscountBalanceRequest
	3,  // 13: PaymentService.DiscountByIntegral:input_type -> DiscountIntegralRequest
	4,  // 14: PaymentService.PaymentByWallet:input_type -> WalletPaymentRequest
	5,  // 15: PaymentService.HybridPayment:input_type -> HyperPaymentRequest
	6,  // 16: PaymentService.FinishPayment:input_type -> FinishPaymentRequest
	26, // 17: PaymentService.QueryDivideOrders:input_type -> DivideOrdersRequest
	23, // 18: PaymentService.Divide:input_type -> PaymentDivideRequest
	15, // 19: PaymentService.CompleteDivide:input_type -> PaymentOrderRequest
	29, // 20: PaymentService.UpdateDivideStatus:input_type -> UpdateDivideStatusRequest
	30, // 21: PaymentService.RevertSubDivide:input_type -> PaymentSubDivideRevertRequest
	31, // 22: PaymentService.DivideSuccess:input_type -> PaymentDivideSuccessRequest
	39, // 23: PaymentService.GetSubMerchant:input_type -> SubMerchantCodeRequest
	40, // 24: PaymentService.InitialSubMerchant:input_type -> SubMerchantInitialRequest
	42, // 25: PaymentService.StageSubMerchant:input_type -> SSubMerchant
	39, // 26: PaymentService.SubmitSubMerchant:input_type -> SubMerchantCodeRequest
	41, // 27: PaymentService.UpdateSubMerchant:input_type -> SubMerchantUpdateRequest
	36, // 28: PaymentService.QueryRefundableOrders:input_type -> QueryRefundablePaymentOrdersRequest
	32, // 29: PaymentService.RequestRefund:input_type -> PaymentRefundRequest
	33, // 30: PaymentService.RequestRefundAvail:input_type -> PaymentRefundAvailRequest
	35, // 31: PaymentService.SupplementRefund:input_type -> PaymentSupplementRefundRequest
	13, // 32: PaymentService.GatewayV1:input_type -> PayGatewayRequest
	11, // 33: PaymentService.GetPreparePaymentInfo:input_type -> OrderInfoRequest
	9,  // 34: PaymentService.GatewayV2:input_type -> PayGatewayV2Request
	12, // 35: PaymentService.MixedPayment:input_type -> MixedPaymentRequest
	22, // 36: PaymentService.SaveIntegrateApp:input_type -> SIntegrateApp
	44, // 37: PaymentService.QueryIntegrateAppList:input_type -> Empty
	7,  // 38: PaymentService.PrepareIntegrateParams:input_type -> IntegrateParamsRequest
	20, // 39: PaymentService.DeleteIntegrateApp:input_type -> PayIntegrateAppId
	45, // 40: PaymentService.SubmitPaymentOrder:output_type -> TxResult
	14, // 41: PaymentService.GetPaymentOrder:output_type -> SPaymentOrder
	45, // 42: PaymentService.AdjustOrder:output_type -> TxResult
	45, // 43: PaymentService.DiscountByBalance:output_type -> TxResult
	45, // 44: PaymentService.DiscountByIntegral:output_type -> TxResult
	45, // 45: PaymentService.PaymentByWallet:output_type -> TxResult
	45, // 46: PaymentService.HybridPayment:output_type -> TxResult
	45, // 47: PaymentService.FinishPayment:output_type -> TxResult
	28, // 48: PaymentService.QueryDivideOrders:output_type -> DivideOrdersResponse
	45, // 49: PaymentService.Divide:output_type -> TxResult
	45, // 50: PaymentService.CompleteDivide:output_type -> TxResult
	45, // 51: PaymentService.UpdateDivideStatus:output_type -> TxResult
	45, // 52: PaymentService.RevertSubDivide:output_type -> TxResult
	45, // 53: PaymentService.DivideSuccess:output_type -> TxResult
	42, // 54: PaymentService.GetSubMerchant:output_type -> SSubMerchant
	45, // 55: PaymentService.InitialSubMerchant:output_type -> TxResult
	45, // 56: PaymentService.StageSubMerchant:output_type -> TxResult
	45, // 57: PaymentService.SubmitSubMerchant:output_type -> TxResult
	45, // 58: PaymentService.UpdateSubMerchant:output_type -> TxResult
	37, // 59: PaymentService.QueryRefundableOrders:output_type -> RefundablePaymentOrdersResponse
	45, // 60: PaymentService.RequestRefund:output_type -> TxResult
	34, // 61: PaymentService.RequestRefundAvail:output_type -> PaymentRefundAvailResponse
	45, // 62: PaymentService.SupplementRefund:output_type -> TxResult
	45, // 63: PaymentService.GatewayV1:output_type -> TxResult
	18, // 64: PaymentService.GetPreparePaymentInfo:output_type -> SPrepareTradeData
	10, // 65: PaymentService.GatewayV2:output_type -> PayGatewayResponse
	45, // 66: PaymentService.MixedPayment:output_type -> TxResult
	45, // 67: PaymentService.SaveIntegrateApp:output_type -> TxResult
	21, // 68: PaymentService.QueryIntegrateAppList:output_type -> QueryIntegrateAppResponse
	8,  // 69: PaymentService.PrepareIntegrateParams:output_type -> IntegrateParamsResponse
	45, // 70: PaymentService.DeleteIntegrateApp:output_type -> TxResult
	40, // [40:71] is the sub-list for method output_type
	9,  // [9:40] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_payment_service_proto_init() }
func file_payment_service_proto_init() {
	if File_payment_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountIntegralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrateParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixedPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPaymentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRequestPayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STradeChanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareTradeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPaymentOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayIntegrateAppId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SIntegrateApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentDivideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPaymentSubDivide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDivideData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivideOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDivideOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivideOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDivideStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSubDivideRevertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentDivideSuccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRefundAvailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRefundAvailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSupplementRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRefundablePaymentOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundablePaymentOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundablePaymentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubMerchantCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubMerchantInitialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubMerchantUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSubMerchant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_service_proto_goTypes,
		DependencyIndexes: file_payment_service_proto_depIdxs,
		EnumInfos:         file_payment_service_proto_enumTypes,
		MessageInfos:      file_payment_service_proto_msgTypes,
	}.Build()
	File_payment_service_proto = out.File
	file_payment_service_proto_rawDesc = nil
	file_payment_service_proto_goTypes = nil
	file_payment_service_proto_depIdxs = nil
}
