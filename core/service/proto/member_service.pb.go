// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: member_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LevelUpReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId   int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
	RequestId  int64  `protobuf:"varint,2,opt,name=requestId,proto3" json:"requestId"`
	ReviewPass bool   `protobuf:"varint,3,opt,name=reviewPass,proto3" json:"reviewPass"`
	Remark     string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark"`
}

func (x *LevelUpReviewRequest) Reset() {
	*x = LevelUpReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpReviewRequest) ProtoMessage() {}

func (x *LevelUpReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpReviewRequest.ProtoReflect.Descriptor instead.
func (*LevelUpReviewRequest) Descriptor() ([]byte, []int) {
	return file_member_service_proto_rawDescGZIP(), []int{0}
}

func (x *LevelUpReviewRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *LevelUpReviewRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *LevelUpReviewRequest) GetReviewPass() bool {
	if x != nil {
		return x.ReviewPass
	}
	return false
}

func (x *LevelUpReviewRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type LevelUpConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId  int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
	RequestId int64 `protobuf:"varint,2,opt,name=requestId,proto3" json:"requestId"`
}

func (x *LevelUpConfirmRequest) Reset() {
	*x = LevelUpConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpConfirmRequest) ProtoMessage() {}

func (x *LevelUpConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpConfirmRequest.ProtoReflect.Descriptor instead.
func (*LevelUpConfirmRequest) Descriptor() ([]byte, []int) {
	return file_member_service_proto_rawDescGZIP(), []int{1}
}

func (x *LevelUpConfirmRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *LevelUpConfirmRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// 提交会员充值支付单
type SubmitRechargePaymentOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员编号
	MemberId int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
	// 充值金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	// 是否分账
	Divide bool `protobuf:"varint,4,opt,name=divide,proto3" json:"divide"`
}

func (x *SubmitRechargePaymentOrderRequest) Reset() {
	*x = SubmitRechargePaymentOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRechargePaymentOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRechargePaymentOrderRequest) ProtoMessage() {}

func (x *SubmitRechargePaymentOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRechargePaymentOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitRechargePaymentOrderRequest) Descriptor() ([]byte, []int) {
	return file_member_service_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitRechargePaymentOrderRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SubmitRechargePaymentOrderRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubmitRechargePaymentOrderRequest) GetDivide() bool {
	if x != nil {
		return x.Divide
	}
	return false
}

// 提交会员充值单响应
type RechargePaymentOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// 信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	// 订单号
	OrderNo string `protobuf:"bytes,3,opt,name=orderNo,proto3" json:"orderNo"`
}

func (x *RechargePaymentOrderResponse) Reset() {
	*x = RechargePaymentOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargePaymentOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargePaymentOrderResponse) ProtoMessage() {}

func (x *RechargePaymentOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_member_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargePaymentOrderResponse.ProtoReflect.Descriptor instead.
func (*RechargePaymentOrderResponse) Descriptor() ([]byte, []int) {
	return file_member_service_proto_rawDescGZIP(), []int{3}
}

func (x *RechargePaymentOrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RechargePaymentOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RechargePaymentOrderResponse) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type RejectCertificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员编号
	MemberId int64 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId"`
	// 驳回原因
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *RejectCertificationRequest) Reset() {
	*x = RejectCertificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectCertificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectCertificationRequest) ProtoMessage() {}

func (x *RejectCertificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectCertificationRequest.ProtoReflect.Descriptor instead.
func (*RejectCertificationRequest) Descriptor() ([]byte, []int) {
	return file_member_service_proto_rawDescGZIP(), []int{4}
}

func (x *RejectCertificationRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *RejectCertificationRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

var File_member_service_proto protoreflect.FileDescriptor

var file_member_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x14,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x51, 0x0a, 0x15, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x21, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x1c, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x22, 0x50, 0x0a, 0x1a, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x32, 0xaf, 0x23, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x13, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73,
	0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x53, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d,
	0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a,
	0x13, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x13,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x06, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x1a, 0x0d, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x53, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x06,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x27, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08,
	0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x09, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x09, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x72,
	0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x19, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0f,
	0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x72, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x10,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x42, 0x61,
	0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61,
	0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x25, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x10, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x0c, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x29, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x11, 0x2e,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x53,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x79, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x13, 0x2e, 0x50, 0x61, 0x79, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x31, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x14, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x38, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x33, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x33, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x1a, 0x05, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x12, 0x0f, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x27, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x12, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x27, 0x0a, 0x0b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x0b, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x13, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x53, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x11, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x29, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x53, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0c,
	0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x49,
	0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x05, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x0c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x0d, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0d, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x35, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x41, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x72, 0x79, 0x54, 0x6f, 0x12, 0x14,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x32, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x33, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12,
	0x15, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2e, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x17, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x31, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x12, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x3f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x43, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70, 0x12, 0x14, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x55, 0x6e, 0x62, 0x69, 0x6e,
	0x64, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70, 0x12, 0x13, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x53, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x42, 0x34, 0x45, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x0f, 0x2e, 0x42, 0x34, 0x45, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x49, 0x64, 0x1a, 0x15,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x10,
	0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x49, 0x73, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x10, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12,
	0x45, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12,
	0x1a, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_member_service_proto_rawDescOnce sync.Once
	file_member_service_proto_rawDescData = file_member_service_proto_rawDesc
)

func file_member_service_proto_rawDescGZIP() []byte {
	file_member_service_proto_rawDescOnce.Do(func() {
		file_member_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_member_service_proto_rawDescData)
	})
	return file_member_service_proto_rawDescData
}

var file_member_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_member_service_proto_goTypes = []interface{}{
	(*LevelUpReviewRequest)(nil),              // 0: LevelUpReviewRequest
	(*LevelUpConfirmRequest)(nil),             // 1: LevelUpConfirmRequest
	(*SubmitRechargePaymentOrderRequest)(nil), // 2: SubmitRechargePaymentOrderRequest
	(*RechargePaymentOrderResponse)(nil),      // 3: RechargePaymentOrderResponse
	(*RejectCertificationRequest)(nil),        // 4: RejectCertificationRequest
	(*RegisterMemberRequest)(nil),             // 5: RegisterMemberRequest
	(*LoginRequest)(nil),                      // 6: LoginRequest
	(*OAuthLoginRequest)(nil),                 // 7: OAuthLoginRequest
	(*OAuthUserInfoRequest)(nil),              // 8: OAuthUserInfoRequest
	(*VerifyPasswordRequest)(nil),             // 9: VerifyPasswordRequest
	(*Empty)(nil),                             // 10: Empty
	(*MemberIdRequest)(nil),                   // 11: MemberIdRequest
	(*SubmitCertificationRequest)(nil),        // 12: SubmitCertificationRequest
	(*ReviewCertificationRequest)(nil),        // 13: ReviewCertificationRequest
	(*Int32)(nil),                             // 14: Int32
	(*SMemberLevel)(nil),                      // 15: SMemberLevel
	(*String)(nil),                            // 16: String
	(*Int64)(nil),                             // 17: Int64
	(*FindMemberRequest)(nil),                 // 18: FindMemberRequest
	(*SProfile)(nil),                          // 19: SProfile
	(*MemberBlockShieldRequest)(nil),          // 20: MemberBlockShieldRequest
	(*MembersIdRequest)(nil),                  // 21: MembersIdRequest
	(*BankCardAddRequest)(nil),                // 22: BankCardAddRequest
	(*BankCardRequest)(nil),                   // 23: BankCardRequest
	(*LockRequest)(nil),                       // 24: LockRequest
	(*GrantFlagRequest)(nil),                  // 25: GrantFlagRequest
	(*SendCodeRequest)(nil),                   // 26: SendCodeRequest
	(*CompareCodeRequest)(nil),                // 27: CompareCodeRequest
	(*ReceiptsCodeSaveRequest)(nil),           // 28: ReceiptsCodeSaveRequest
	(*PayPriorityRequest)(nil),                // 29: PayPriorityRequest
	(*ChangeLevelRequest)(nil),                // 30: ChangeLevelRequest
	(*ChangePhoneRequest)(nil),                // 31: ChangePhoneRequest
	(*ChangeUsernameRequest)(nil),             // 32: ChangeUsernameRequest
	(*ChangeNicknameRequest)(nil),             // 33: ChangeNicknameRequest
	(*ChangeProfilePhotoRequest)(nil),         // 34: ChangeProfilePhotoRequest
	(*ChangePasswordRequest)(nil),             // 35: ChangePasswordRequest
	(*SetInviterRequest)(nil),                 // 36: SetInviterRequest
	(*PremiumRequest)(nil),                    // 37: PremiumRequest
	(*GetTokenRequest)(nil),                   // 38: GetTokenRequest
	(*CheckTokenRequest)(nil),                 // 39: CheckTokenRequest
	(*SaveAddressRequest)(nil),                // 40: SaveAddressRequest
	(*GetAddressRequest)(nil),                 // 41: GetAddressRequest
	(*AddressIdRequest)(nil),                  // 42: AddressIdRequest
	(*IsInvitationRequest)(nil),               // 43: IsInvitationRequest
	(*DepthRequest)(nil),                      // 44: DepthRequest
	(*InviteQuantityRequest)(nil),             // 45: InviteQuantityRequest
	(*MemberInvitationPagingRequest)(nil),     // 46: MemberInvitationPagingRequest
	(*AccountChangeRequest)(nil),              // 47: AccountChangeRequest
	(*AccountCarryRequest)(nil),               // 48: AccountCarryRequest
	(*UserPrefreezeConsumeRequest)(nil),       // 49: UserPrefreezeConsumeRequest
	(*AccountFreezeRequest)(nil),              // 50: AccountFreezeRequest
	(*AccountUnfreezeRequest)(nil),            // 51: AccountUnfreezeRequest
	(*AccountAdjustRequest)(nil),              // 52: AccountAdjustRequest
	(*AccountTransferRequest)(nil),            // 53: AccountTransferRequest
	(*UserWithdrawRequest)(nil),               // 54: UserWithdrawRequest
	(*ReviewUserWithdrawalRequest)(nil),       // 55: ReviewUserWithdrawalRequest
	(*FinishUserTransactionRequest)(nil),      // 56: FinishUserTransactionRequest
	(*WithdrawalLogRequest)(nil),              // 57: WithdrawalLogRequest
	(*SMemberOAuthAccount)(nil),               // 58: SMemberOAuthAccount
	(*MemberOAuthRequest)(nil),                // 59: MemberOAuthRequest
	(*B4EAuthRequest)(nil),                    // 60: B4EAuthRequest
	(*UserWalletTxId)(nil),                    // 61: UserWalletTxId
	(*FavoriteRequest)(nil),                   // 62: FavoriteRequest
	(*MemberCouponPagingRequest)(nil),         // 63: MemberCouponPagingRequest
	(*RegisterResponse)(nil),                  // 64: RegisterResponse
	(*LoginResponse)(nil),                     // 65: LoginResponse
	(*OAuthUserInfoResponse)(nil),             // 66: OAuthUserInfoResponse
	(*Result)(nil),                            // 67: Result
	(*SMemberLevelListResponse)(nil),          // 68: SMemberLevelListResponse
	(*SCertificationInfo)(nil),                // 69: SCertificationInfo
	(*TxResult)(nil),                          // 70: TxResult
	(*SMember)(nil),                           // 71: SMember
	(*FindMemberResponse)(nil),                // 72: FindMemberResponse
	(*MemberInviterResponse)(nil),             // 73: MemberInviterResponse
	(*MemberInviteCountResponse)(nil),         // 74: MemberInviteCountResponse
	(*MemberBlockShieldResponse)(nil),         // 75: MemberBlockShieldResponse
	(*BankCardListResponse)(nil),              // 76: BankCardListResponse
	(*SComplexMember)(nil),                    // 77: SComplexMember
	(*SendCodeResponse)(nil),                  // 78: SendCodeResponse
	(*SReceiptsCodeListResponse)(nil),         // 79: SReceiptsCodeListResponse
	(*SMemberLevelInfo)(nil),                  // 80: SMemberLevelInfo
	(*Bool)(nil),                              // 81: Bool
	(*AddressListResponse)(nil),               // 82: AddressListResponse
	(*SaveAddressResponse)(nil),               // 83: SaveAddressResponse
	(*SAddress)(nil),                          // 84: SAddress
	(*SAccount)(nil),                          // 85: SAccount
	(*InviterIdListResponse)(nil),             // 86: InviterIdListResponse
	(*MemberIdListResponse)(nil),              // 87: MemberIdListResponse
	(*MemberInvitationPagingResponse)(nil),    // 88: MemberInvitationPagingResponse
	(*WithdrawalLogResponse)(nil),             // 89: WithdrawalLogResponse
	(*UserWalletTxResponse)(nil),              // 90: UserWalletTxResponse
	(*MemberCouponListResponse)(nil),          // 91: MemberCouponListResponse
}
var file_member_service_proto_depIdxs = []int32{
	5,  // 0: MemberService.Register:input_type -> RegisterMemberRequest
	6,  // 1: MemberService.CheckLogin:input_type -> LoginRequest
	7,  // 2: MemberService.OAuthLogin:input_type -> OAuthLoginRequest
	8,  // 3: MemberService.GetOAuthInfo:input_type -> OAuthUserInfoRequest
	9,  // 4: MemberService.VerifyTradePassword:input_type -> VerifyPasswordRequest
	10, // 5: MemberService.GetLevels:input_type -> Empty
	11, // 6: MemberService.GetCertification:input_type -> MemberIdRequest
	12, // 7: MemberService.SubmitCertification:input_type -> SubmitCertificationRequest
	13, // 8: MemberService.ReviewCertification:input_type -> ReviewCertificationRequest
	4,  // 9: MemberService.RejectCertification:input_type -> RejectCertificationRequest
	14, // 10: MemberService.GetMemberLevel:input_type -> Int32
	15, // 11: MemberService.SaveMemberLevel:input_type -> SMemberLevel
	16, // 12: MemberService.GetLevelBySign:input_type -> String
	17, // 13: MemberService.DeleteMemberLevel:input_type -> Int64
	11, // 14: MemberService.GetMember:input_type -> MemberIdRequest
	18, // 15: MemberService.FindMember:input_type -> FindMemberRequest
	11, // 16: MemberService.GetProfile:input_type -> MemberIdRequest
	19, // 17: MemberService.SaveProfile:input_type -> SProfile
	11, // 18: MemberService.GetInviter:input_type -> MemberIdRequest
	11, // 19: MemberService.GetInviteCount:input_type -> MemberIdRequest
	20, // 20: MemberService.BlockOrShield:input_type -> MemberBlockShieldRequest
	21, // 21: MemberService.IsBlockOrShield:input_type -> MembersIdRequest
	11, // 22: MemberService.GetBankCards:input_type -> MemberIdRequest
	22, // 23: MemberService.AddBankCard:input_type -> BankCardAddRequest
	23, // 24: MemberService.RemoveBankCard:input_type -> BankCardRequest
	11, // 25: MemberService.Active:input_type -> MemberIdRequest
	24, // 26: MemberService.Lock:input_type -> LockRequest
	11, // 27: MemberService.Unlock:input_type -> MemberIdRequest
	25, // 28: MemberService.GrantFlag:input_type -> GrantFlagRequest
	11, // 29: MemberService.Complex:input_type -> MemberIdRequest
	26, // 30: MemberService.SendCode:input_type -> SendCodeRequest
	27, // 31: MemberService.compareCode:input_type -> CompareCodeRequest
	11, // 32: MemberService.ReceiptsCodes:input_type -> MemberIdRequest
	28, // 33: MemberService.SaveReceiptsCode:input_type -> ReceiptsCodeSaveRequest
	29, // 34: MemberService.SetPayPriority:input_type -> PayPriorityRequest
	11, // 35: MemberService.CheckProfileComplete:input_type -> MemberIdRequest
	11, // 36: MemberService.MemberLevelInfo:input_type -> MemberIdRequest
	30, // 37: MemberService.ChangeLevel:input_type -> ChangeLevelRequest
	0,  // 38: MemberService.ReviewLevelUpRequest:input_type -> LevelUpReviewRequest
	1,  // 39: MemberService.ConfirmLevelUpRequest:input_type -> LevelUpConfirmRequest
	31, // 40: MemberService.ChangePhone:input_type -> ChangePhoneRequest
	32, // 41: MemberService.ChangeUsername:input_type -> ChangeUsernameRequest
	33, // 42: MemberService.ChangeNickname:input_type -> ChangeNicknameRequest
	34, // 43: MemberService.ChangeProfilePhoto:input_type -> ChangeProfilePhotoRequest
	35, // 44: MemberService.ChangePassword:input_type -> ChangePasswordRequest
	35, // 45: MemberService.ChangeTradePassword:input_type -> ChangePasswordRequest
	17, // 46: MemberService.CheckProfileCompleted:input_type -> Int64
	36, // 47: MemberService.SetInviter:input_type -> SetInviterRequest
	37, // 48: MemberService.Premium:input_type -> PremiumRequest
	38, // 49: MemberService.GetToken:input_type -> GetTokenRequest
	39, // 50: MemberService.CheckToken:input_type -> CheckTokenRequest
	11, // 51: MemberService.RemoveToken:input_type -> MemberIdRequest
	11, // 52: MemberService.GetAddressList:input_type -> MemberIdRequest
	40, // 53: MemberService.SaveAddress:input_type -> SaveAddressRequest
	41, // 54: MemberService.GetAddress:input_type -> GetAddressRequest
	42, // 55: MemberService.DeleteAddress:input_type -> AddressIdRequest
	11, // 56: MemberService.GetAccount:input_type -> MemberIdRequest
	43, // 57: MemberService.IsInvitation:input_type -> IsInvitationRequest
	44, // 58: MemberService.InviterArray:input_type -> DepthRequest
	44, // 59: MemberService.InviteMembersQuantity:input_type -> DepthRequest
	45, // 60: MemberService.QueryInviteQuantity:input_type -> InviteQuantityRequest
	45, // 61: MemberService.QueryInviteArray:input_type -> InviteQuantityRequest
	46, // 62: MemberService.GetPagingInvitationMembers:input_type -> MemberInvitationPagingRequest
	47, // 63: MemberService.AccountCharge:input_type -> AccountChangeRequest
	48, // 64: MemberService.AccountCarryTo:input_type -> AccountCarryRequest
	47, // 65: MemberService.AccountConsume:input_type -> AccountChangeRequest
	49, // 66: MemberService.PrefreezeConsume:input_type -> UserPrefreezeConsumeRequest
	47, // 67: MemberService.AccountDiscount:input_type -> AccountChangeRequest
	50, // 68: MemberService.Freeze:input_type -> AccountFreezeRequest
	51, // 69: MemberService.Unfreeze:input_type -> AccountUnfreezeRequest
	47, // 70: MemberService.AccountRefund:input_type -> AccountChangeRequest
	52, // 71: MemberService.AccountAdjust:input_type -> AccountAdjustRequest
	53, // 72: MemberService.AccountTransfer:input_type -> AccountTransferRequest
	54, // 73: MemberService.RequestWithdrawal:input_type -> UserWithdrawRequest
	55, // 74: MemberService.ReviewWithdrawal:input_type -> ReviewUserWithdrawalRequest
	56, // 75: MemberService.CompleteTransaction:input_type -> FinishUserTransactionRequest
	57, // 76: MemberService.QueryWithdrawalLog:input_type -> WithdrawalLogRequest
	2,  // 77: MemberService.SubmitRechargePaymentOrder:input_type -> SubmitRechargePaymentOrderRequest
	58, // 78: MemberService.BindOAuthApp:input_type -> SMemberOAuthAccount
	59, // 79: MemberService.UnbindOAuthApp:input_type -> MemberOAuthRequest
	59, // 80: MemberService.GetOAuthBindInfo:input_type -> MemberOAuthRequest
	60, // 81: MemberService.B4EAuth:input_type -> B4EAuthRequest
	61, // 82: MemberService.GetWalletTxLog:input_type -> UserWalletTxId
	62, // 83: MemberService.RemoveFavorite:input_type -> FavoriteRequest
	62, // 84: MemberService.Favorite:input_type -> FavoriteRequest
	62, // 85: MemberService.IsFavored:input_type -> FavoriteRequest
	63, // 86: MemberService.QueryCoupons:input_type -> MemberCouponPagingRequest
	64, // 87: MemberService.Register:output_type -> RegisterResponse
	65, // 88: MemberService.CheckLogin:output_type -> LoginResponse
	65, // 89: MemberService.OAuthLogin:output_type -> LoginResponse
	66, // 90: MemberService.GetOAuthInfo:output_type -> OAuthUserInfoResponse
	67, // 91: MemberService.VerifyTradePassword:output_type -> Result
	68, // 92: MemberService.GetLevels:output_type -> SMemberLevelListResponse
	69, // 93: MemberService.GetCertification:output_type -> SCertificationInfo
	70, // 94: MemberService.SubmitCertification:output_type -> TxResult
	70, // 95: MemberService.ReviewCertification:output_type -> TxResult
	70, // 96: MemberService.RejectCertification:output_type -> TxResult
	15, // 97: MemberService.GetMemberLevel:output_type -> SMemberLevel
	67, // 98: MemberService.SaveMemberLevel:output_type -> Result
	15, // 99: MemberService.GetLevelBySign:output_type -> SMemberLevel
	67, // 100: MemberService.DeleteMemberLevel:output_type -> Result
	71, // 101: MemberService.GetMember:output_type -> SMember
	72, // 102: MemberService.FindMember:output_type -> FindMemberResponse
	19, // 103: MemberService.GetProfile:output_type -> SProfile
	67, // 104: MemberService.SaveProfile:output_type -> Result
	73, // 105: MemberService.GetInviter:output_type -> MemberInviterResponse
	74, // 106: MemberService.GetInviteCount:output_type -> MemberInviteCountResponse
	70, // 107: MemberService.BlockOrShield:output_type -> TxResult
	75, // 108: MemberService.IsBlockOrShield:output_type -> MemberBlockShieldResponse
	76, // 109: MemberService.GetBankCards:output_type -> BankCardListResponse
	67, // 110: MemberService.AddBankCard:output_type -> Result
	67, // 111: MemberService.RemoveBankCard:output_type -> Result
	70, // 112: MemberService.Active:output_type -> TxResult
	70, // 113: MemberService.Lock:output_type -> TxResult
	70, // 114: MemberService.Unlock:output_type -> TxResult
	70, // 115: MemberService.GrantFlag:output_type -> TxResult
	77, // 116: MemberService.Complex:output_type -> SComplexMember
	78, // 117: MemberService.SendCode:output_type -> SendCodeResponse
	70, // 118: MemberService.compareCode:output_type -> TxResult
	79, // 119: MemberService.ReceiptsCodes:output_type -> SReceiptsCodeListResponse
	67, // 120: MemberService.SaveReceiptsCode:output_type -> Result
	67, // 121: MemberService.SetPayPriority:output_type -> Result
	67, // 122: MemberService.CheckProfileComplete:output_type -> Result
	80, // 123: MemberService.MemberLevelInfo:output_type -> SMemberLevelInfo
	70, // 124: MemberService.ChangeLevel:output_type -> TxResult
	67, // 125: MemberService.ReviewLevelUpRequest:output_type -> Result
	67, // 126: MemberService.ConfirmLevelUpRequest:output_type -> Result
	70, // 127: MemberService.ChangePhone:output_type -> TxResult
	70, // 128: MemberService.ChangeUsername:output_type -> TxResult
	70, // 129: MemberService.ChangeNickname:output_type -> TxResult
	70, // 130: MemberService.ChangeProfilePhoto:output_type -> TxResult
	70, // 131: MemberService.ChangePassword:output_type -> TxResult
	70, // 132: MemberService.ChangeTradePassword:output_type -> TxResult
	81, // 133: MemberService.CheckProfileCompleted:output_type -> Bool
	70, // 134: MemberService.SetInviter:output_type -> TxResult
	67, // 135: MemberService.Premium:output_type -> Result
	16, // 136: MemberService.GetToken:output_type -> String
	81, // 137: MemberService.CheckToken:output_type -> Bool
	10, // 138: MemberService.RemoveToken:output_type -> Empty
	82, // 139: MemberService.GetAddressList:output_type -> AddressListResponse
	83, // 140: MemberService.SaveAddress:output_type -> SaveAddressResponse
	84, // 141: MemberService.GetAddress:output_type -> SAddress
	67, // 142: MemberService.DeleteAddress:output_type -> Result
	85, // 143: MemberService.GetAccount:output_type -> SAccount
	81, // 144: MemberService.IsInvitation:output_type -> Bool
	86, // 145: MemberService.InviterArray:output_type -> InviterIdListResponse
	14, // 146: MemberService.InviteMembersQuantity:output_type -> Int32
	17, // 147: MemberService.QueryInviteQuantity:output_type -> Int64
	87, // 148: MemberService.QueryInviteArray:output_type -> MemberIdListResponse
	88, // 149: MemberService.GetPagingInvitationMembers:output_type -> MemberInvitationPagingResponse
	70, // 150: MemberService.AccountCharge:output_type -> TxResult
	70, // 151: MemberService.AccountCarryTo:output_type -> TxResult
	70, // 152: MemberService.AccountConsume:output_type -> TxResult
	70, // 153: MemberService.PrefreezeConsume:output_type -> TxResult
	70, // 154: MemberService.AccountDiscount:output_type -> TxResult
	70, // 155: MemberService.Freeze:output_type -> TxResult
	70, // 156: MemberService.Unfreeze:output_type -> TxResult
	70, // 157: MemberService.AccountRefund:output_type -> TxResult
	70, // 158: MemberService.AccountAdjust:output_type -> TxResult
	70, // 159: MemberService.AccountTransfer:output_type -> TxResult
	70, // 160: MemberService.RequestWithdrawal:output_type -> TxResult
	70, // 161: MemberService.ReviewWithdrawal:output_type -> TxResult
	70, // 162: MemberService.CompleteTransaction:output_type -> TxResult
	89, // 163: MemberService.QueryWithdrawalLog:output_type -> WithdrawalLogResponse
	3,  // 164: MemberService.SubmitRechargePaymentOrder:output_type -> RechargePaymentOrderResponse
	67, // 165: MemberService.BindOAuthApp:output_type -> Result
	67, // 166: MemberService.UnbindOAuthApp:output_type -> Result
	58, // 167: MemberService.GetOAuthBindInfo:output_type -> SMemberOAuthAccount
	67, // 168: MemberService.B4EAuth:output_type -> Result
	90, // 169: MemberService.GetWalletTxLog:output_type -> UserWalletTxResponse
	67, // 170: MemberService.RemoveFavorite:output_type -> Result
	67, // 171: MemberService.Favorite:output_type -> Result
	81, // 172: MemberService.IsFavored:output_type -> Bool
	91, // 173: MemberService.QueryCoupons:output_type -> MemberCouponListResponse
	87, // [87:174] is the sub-list for method output_type
	0,  // [0:87] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_member_service_proto_init() }
func file_member_service_proto_init() {
	if File_member_service_proto != nil {
		return
	}
	file_global_proto_init()
	file_message_bank_dto_proto_init()
	file_message_member_dto_proto_init()
	file_message_member_query_dto_proto_init()
	file_message_payment_dto_proto_init()
	file_message_wallet_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_member_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitRechargePaymentOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RechargePaymentOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectCertificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_member_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_member_service_proto_goTypes,
		DependencyIndexes: file_member_service_proto_depIdxs,
		MessageInfos:      file_member_service_proto_msgTypes,
	}.Build()
	File_member_service_proto = out.File
	file_member_service_proto_rawDesc = nil
	file_member_service_proto_goTypes = nil
	file_member_service_proto_depIdxs = nil
}
