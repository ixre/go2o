syntax = "proto3";


option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 会员标志
enum EMemberFlag {
  // 已创建的会员
  MEMBER_CREATED = 0;
  // 已激活
  ACTIVE = 1;
  // 已锁定的
  LOCKED = 2;
  // 已认证的
  TRUSTED = 4;
  // 商户
  SELLER = 64;
  /** 未设置交易密码 */
  NO_TRADE_PASSWD = 128;
  // 有返利权限的
  REBATE_DISABLED = 256;
}

message RegisterMemberRequest {
  // 用户名
  string username = 1;
  // 密码(md5)
  string password = 2;
  // 昵称
  string nickname = 3;
  // 国家代码
  string countryCode = 4;
  // 手机
  string phone = 5;
  // 邮箱
  string email = 6;
  // 邀请人代码
  string inviterCode = 7;
  // 角色标志,1: 用户, 2:商户雇员, 4:扩展1, 8:扩展2, 16:扩展3  
  sint32 userType = 8;
  // 注册IP
  string regIp = 9;
  // 注册来源
  string regFrom = 10;
  // 扩展字段
  map<string,string> ext = 11;
}

// 登录请求
message LoginRequest {
  // 用户
  string username = 1;
  // 密码
  string password = 2;
  // 是否更新用户登录时间
  bool update = 3;
}

// 第三方快捷登录请求
message OAuthLoginRequest {
  // 应用编号
  int32 appId = 1;
  // 第三方客户端类型
  string clientType = 2;
  // 第三方登录凭据
  string clientLoginToken = 3;
  // 第三方用户信息代码,用于交换手机号等,如已绑定，则不需要传递
  string clientUserCode = 4;
  // 额外参数,如已绑定，则不需要传递
  SOAuthExtraParams extraParams = 5;
}

// 第三方快捷登录额外参数
message SOAuthExtraParams {
  // 用户名(注册用)
  string username = 1;
  // 邀请码(注册用)
  string inviterCode = 2;
  // 昵称
  string nickname = 3;
  // 国家代码
  string countryCode = 4;
  // 注册IP
  string regIp = 5;
  // 注册来源
  string regFrom = 6;
}

// 用户登录响应
message LoginResponse{
  // 错误码
  int32 code = 1;
  // 错误消息
  string message = 2;
  // 会员编号
  int64 memberId = 3;
  // 用户代码
  string userCode = 4;
}

// 获取第三方登录信息请求
message OAuthUserInfoRequest {
  // 应用编号
  int32 appId = 1;
  // 第三方客户端类型
  string clientType = 2;
  // 第三方登录凭据
  string clientLoginToken = 3;
}

// 获取第三方登录信息响应
message OAuthUserInfoResponse {
  // 错误码
  int32 code = 1;
  // 错误消息
  string message = 2;
  // 会员编号
  int64 memberId = 3;
  // 会员编号
  string nickname = 4;
}

// 注册结果
message RegisterResponse {
  // 状态码,如为0表示成功
  int32 errCode = 1;
  // 消息
  string errMsg = 2;
  // 会员编号
  int64 memberId = 3;
}

// 密码验证请求
message VerifyPasswordRequest {
  int64 memberId = 1;
  string password = 2;
}

// 会员编号
message MemberIdRequest{
  int64 memberId = 1;
}

// 会员屏蔽或拉黑请求
message MemberBlockShieldRequest{
  // 会员编号
  int64 memberId = 1;
  // 目标会员编号
  int64 targetMemberId = 2;
  // 屏蔽类型, 1:屏蔽, 2:拉黑
  int32 blockType = 3;
  // 是否撤销屏蔽或拉黑
  bool isRevert = 4;
}

// 会员请求
message MembersIdRequest{
  // 会员编号 
  int64 memberId = 1;
  // 目标会员编号
  int64 targetMemberId = 2;
}

// 会员屏蔽或拉黑响应
message MemberBlockShieldResponse {
  // 是否拉黑
  bool isBlock = 1;
  // 是否屏蔽
  bool isShield = 2;
}

// 查找会员请求
message FindMemberRequest {
  // 凭据类型
  ECredentials cred = 1;
  // 凭据的值
  string value = 2;
}

// 查找会员响应
message FindMemberResponse {
  // 会员编号
  int64 memberId = 1;
}

message SMemberLevelListResponse {
  repeated SMemberLevel value = 1;
}

message SubmitCertificationRequest {
  sint64 memberId = 1;
  SCertificationInfo info = 2;
}

message ReviewCertificationRequest {
  int64 memberId = 1;
  bool reviewPass = 2;
  string remark =3;
}

message LockRequest {
  sint64 memberId = 1;
  sint32 minutes = 2;
  string remark =3;
}
message GrantFlagRequest {
  sint64 memberId = 1;
  sint32 flag = 2;
}

// 发送验证码请求
message SendCodeRequest {
  // 会员编号
  sint64 memberId = 1;
  // 操作
  string operation = 2;
  // 消息类型
  int32 msgType = 3;
}

// 发送验证码响应
message SendCodeResponse{
  // 错误码
  int32 errCode = 1;
  // 错误消息
  string errMsg = 2;
  // 验证码
  string checkCode = 3;
}

message CompareCodeRequest {
  sint64 memberId = 1;
  string code = 2;
}

message SReceiptsCodeListResponse {
  repeated SReceiptsCode value = 1;
}
message ReceiptsCodeSaveRequest {
  sint64 memberId = 1;
  SReceiptsCode code = 2;
}


// 更改会员等级请求
message ChangeLevelRequest {
  // 会员编号
  int64 memberId = 1;
  // 等级ID
  sint32 level = 2;
  // 等级代码,如果设置该属性,则level应传值为0
  string levelCode = 3;
  // 是否需要审核
  bool review = 4;
  // 付费升级支付单号
  int64 paymentOrderId = 5;
}

// 修改手机号请求
message ChangePhoneRequest {
  // 会员编号
  int64 memberId = 1;
  string phone = 2;
}

// 修改用户名请求
message ChangeUsernameRequest {
  // 会员编号
  int64 memberId = 1;
  // 用户名
  string username = 2;
}

// 更改昵称请求
message ChangeNicknameRequest{
    // 会员编号
  int64 memberId = 1;
  // 昵称
  string nickname = 2;
  // 是否限制修改次数
  bool limitTime = 3;
}

message ChangePasswordRequest {
  sint64 memberId = 1;
  string oldPassword = 2;
  string newPassword = 3;
}
message SetInviterRequest {
  // 会员编号
  int64 memberId = 1;
  // 邀请码
  string inviterCode = 2;
  // 是否允许更改现有绑定人
  bool allowChange = 3;
}

message GetTokenRequest {
  sint64 memberId = 1;
  bool reset = 2;
}

message PremiumRequest {
  sint64 memberId = 1;
  sint32 value = 2;
  sint64 expires = 3;
}

message CheckTokenRequest {
  sint64 memberId = 1;
  string token = 2;
}

message AddressListResponse {
  repeated SAddress value = 1;
}
message SaveAddressRequest {
  sint64 memberId = 1;
  SAddress value = 2;
}

// 保存地址响应
message SaveAddressResponse {
  /* 状态码,如为0表示成功 */
  int32 errCode = 1;
  /* 消息 */
  string errMsg = 2;
  // 地址编号
  int64 addressId = 3;
}

message GetAddressRequest {
  sint64 memberId = 1;
  sint64 addressId = 2;
}

// 账户资产变动请求
message AccountChangeRequest {
  // 会员编号
  sint64 memberId = 1;
  // 账户类型
  EAccountType accountType = 2;
  // 明细标题
  string transactionTitle = 3;
  // 金额
  int64 amount = 4;
  // 外部交易号
  string outerTransactionNo = 5;
  // 备注
  string transactionRemark =6;
}
/** 账户调整请求 */
message AccountAdjustRequest {
  /** 会员编号 */
  int64 memberId = 1;
  /** 账户类型 */
  EAccountType account = 2;
  /** 调整金额/数量 */
  int64 value = 3;
  /** 是否人工调整 */
  bool manualAdjust = 4;
  /** 关联用户 */
  int64 relateUser = 5;
  /** 备注 */
  string transactionRemark =6;
}

/** 账户入账请求 */
message AccountCarryRequest{
  // 会员编号
  sint64 memberId = 1;
  // 账户类型
  EAccountType accountType = 2;
  // 明细标题
  string transactionTitle = 3;
  // 交易金额(包含手续费)
  int64 amount = 4;
  // 手续费
  int64 transactionFee = 5;
  // 外部交易号
  string outerTransactionNo = 6;
  // 备注
  string transactionRemark =7;
  // 是否先冻结
  bool freeze = 8;
}

/** 冻结请求 */
message AccountFreezeRequest {
  // 会员编号
  sint64 memberId = 1;
  // 账户类型
  EAccountType accountType = 2;
  /** 标题 */
  string transactionTitle = 3;
  /** 冻结金额 */
  int64 amount =  4;
  // 外部交易号
  string outerTransactionNo = 5;
  // 交易流水编号,对冻结流水进行更新时,传递该参数
  int64 transactionId = 6;
  // 备注
  string transactionRemark =7;
}

/** 解冻请求 */
message AccountUnfreezeRequest {
  // 会员编号
  sint64 memberId = 1;
  // 账户类型
  EAccountType accountType = 2;
  /** 标题 */
  string transactionTitle = 3;
  /** 冻结金额 */
  int64 amount =  4;
  // 外部交易号
  string outerTransactionNo = 5;
  // 备注
  string transactionRemark =6;
  // 是否退回余额
  bool isRefundBalance = 7;
}


message B4EAuthRequest {
  sint64 memberId = 1;
  string action = 2;
  map<string, string> data = 3;
}

/** 等级 */
message SMemberLevel {
  sint32 id = 1;
  string name = 2;
  sint32 requireExp = 3;
  string programSignal = 4;
  sint32 isOfficial = 5;
  sint32 enabled = 6;
  sint32 allowUpgrade = 7;
}

// 更换头像申请
message ChangeProfilePhotoRequest {
  // 会员编号
  sint64 memberId = 1;
  // 头像
  string profilePhotoUrl = 2;
}


/** 账户 */
message SAccount {
  // 积分
  int64 integral = 1;
  // 冻结积分
  int64 freezeIntegral = 2;
  // 商城余额
  int64 balance = 3;
  // 冻结商城余额
  int64 freezeBalance = 4;
  // 过期余额
  int64 expiredBalance = 5;
  // 钱包代码
  string walletCode = 6;
  // 钱包余额
  int64 walletBalance = 7;
  // 钱包冻结金额
  int64 walletFreezedAmount = 8;
  // 钱包过期金额
  int64 walletExpiredAmount = 9;
  // 钱包累计金额
  int64 totalWalletAmount = 10;
  // 浮动账户余额
  int64 flowBalance = 11;
  // 增利账户余额
  int64 growBalance = 12;
  // 增利账户本金
  int64 growAmount = 13;
  // 增利账户收益
  int64 growEarnings = 14;
  // 增利账户累计收益
  int64 growTotalEarnings = 15;
  // 可开票金额
  int64 invoiceableAmount = 16;
  // 总消费金额
  int64 totalExpense = 17;
  // 总充值金额
  int64 totalCharge = 18;
  // 总支付额
  int64 totalPay = 19;
  // 优先(默认)支付选项
  int32 priorityPay = 20;
  // 更新时间
  int64 updateTime = 21;
}

message SMemberRelation {
  sint64 memberId = 1;
  string cardId = 2;
  sint64 inviterId = 3;
  string inviterStr = 4;
  sint32 registerMchId = 5;
}

/** 实名认证信息 */
message SCertificationInfo {
  /** 真实姓名 */
  string realName = 1;
  /** 国家代码,如:CN */
  string countryCode = 2;
  /** 证件类型 */
  sint32 cardType = 3;
  /** 证件号码 */
  string cardId = 4;
  /** 证件正面照 */
  string certFrontPic = 5;
  /** 证件反面照 */
  string certBackPic = 6;
  /** 认证人脸照 */
  string trustImage = 7;
  // 其他认证资料
  string extraCertFile = 8;
  // 其他认证证书编号
  string extraCertNo = 16;
  /** 是否人工审核 */
  sint32 manualReview = 9;
  /** 审核状态 */
  sint32 reviewStatus = 10;
  /** 审核时间 */
  sint64 reviewTime = 11;
  /** 提交时间 */
  sint64 createTime = 12;
  /** 备注 */
  string remark =13;
  // 扩展认证资料1
  string extraCertExt1 = 14;
  // 扩展认证资料2
  string extraCertExt2 = 15;
}

// 用户收货地址
message SAddress {
  // 编号
  int64 addressId = 1;
  /** 收货人姓名 */
  string consigneeName = 2;
  /** 收货人电话 */
  string consigneePhone = 3;
  // 省
  int32 province = 4;
  // 市
  int32 city = 5;
  // 区
  int32 district = 6;
  // 区域
  string area = 7;
  // 详细地址
  string detailAddress = 8;
  // 是否默认
  bool isDefault = 9;
}

message AddressIdRequest {
  sint64 memberId = 1;
  sint64 addressId = 2;
}

/** 收款码 */
message SReceiptsCode {
  /** 账户标识,如:alipay */
  string identity = 1;
  /** 账户名称 */
  string receipterName = 2;
  /** 账号 */
  string receiptAccount = 3;
  /** 收款码地址 */
  string codeImageUrl = 4;
  /** 是否启用 */
  sint32 state = 5;
}

/* 会员等级信息 */
message SMemberLevelInfo {
  /** 等级 */
  sint32 level = 1;
  /** 等级名称 */
  string levelName = 2;
  /** 经验值 */
  sint32 exp = 3;
  /** 编程符号 */
  string programSignal = 4;
  /** 下一级等级,返回-1表示最高级别 */
  sint32 nextLevel = 5;
  /** 下一等级名称 */
  string nextLevelName = 6;
  /** 编程符号 */
  string nextProgramSignal = 7;
  /** 需要经验值 */
  sint32 requireExp = 8;
}

/** 订单汇总信息 */
message SMemberOrderSummary {
  /** 待付款订单数量 */
  sint32 awaitPayment = 1;
  /** 待发货订单数量 */
  sint32 awaitShipment = 2;
  /** 待收货订单数量 */
  sint32 awaitReceive = 3;
  /** 已完成订单数量 */
  sint32 completed = 4;
}

// 查询会员邀请人信息
message MemberInviterResponse {
  // 邀请人（会员）
  sint64 inviterId = 1;
  // 邀请人用户名
  string inviterUsername = 2;
  // 邀请人姓名
  string inviterNickname = 3;
  // 邀请人头像
  string inviterProfilePhoto = 4;
  // 邀请人电话
  string inviterPhone = 5;
  // 邀请会员编号(depth2)
  sint64 inviterD2 = 6;
  // 邀请会员编号(depth3)
  sint64 inviterD3 = 7;
  // 注册商户编号
  sint64 regMchId = 8;
  // 注册商户
  string regMchName = 9;
}

// 邀请数量统计
message MemberInviteCountResponse{
  // 邀请下级人数
  sint32 firstLevelCount = 1;
  // 邀请二级人数
  sint32 secondCount = 2;
  // 邀请三级人数
  sint32 thridCount = 3;
}

/** 凭据 */
enum ECredentials {
  _1 = 0;
  /** 用户名 */
  USER = 1;
  /** 用户代码 */
  CODE = 2;
  /** 邮箱 */
  EMAIL = 3;
  /** 手机号码 */
  PHONE = 4;
  /** 邀请码 */
  INVITE_CODE = 6;
}

 
// 获取提现记录
message WithdrawalLogRequest {
  // 会员编号
  int64 memberId = 1;
  // 数量
  int32 number = 2;
  // 仅返回完成的提现
  bool onlyFinished = 3;
}



// 账户类型
enum EAccountType {
  NoAccount = 0;
  // 余额账户
  AccountBalance = 1;
  // 积分账户
  AccountIntegral = 2;
  // 钱包账户, 对应邀请奖励
  AccountWallet = 3;
  // 流通金账户，对应团队推广奖励
  AccountFlow = 4;
}

// 账户转账请求
message AccountTransferRequest {
  // 账户类型
  EAccountType transferAccount = 1;
  // 来源会员编号
  int64 fromMemberId = 2;
  // 目标会员编号
  int64 toMemberId = 3;
  // 转账金额
  int64 amount = 4;
  // 手续费
  int64 transactionFee = 5;
  // 备注
  string transactionRemark =6;
}




// 提现流水流水信息
message WithdrawalLogResponse {
  // 会员编号
  sint64 memberId = 1;
  // 流水数据
  repeated WithdrawalLog data = 2;
}

// 提现日志
message WithdrawalLog {
  // 编号
  int64 id = 1;
  // 外部单号
  string outerTransactionNo = 2;
  // 业务类型
  int32 kind = 3;
  // 标题
  string transactionTitle = 4;
  // 金额
  int64 amount = 5;
  // 手续费
  int64 transactionFee = 6;
  // 关联操作人,仅在客服操作时,记录操作人
  int64 relateUser = 7;
  // 状态
  int32 reviewStatus = 8;
  // 备注
  string transactionRemark =9;
  // 创建时间
  int64 submitTime = 10;
  // 更新时间
  int64 updateTime = 11;
}


message MemberInvitationPagingRequest {
  int64 memberId = 1;
  int64 begin = 2;
  int64 end = 3;
}


message MemberInvitationPagingResponse {
  int64 total = 1;
  repeated SInvitationMember data = 2;
}

// 邀请会员数据
message SInvitationMember {
  // 会员编号
  int64 memberId = 1;
  // 用户名
  string username = 2;
  // 等级
  int32 level = 3;
  // 头像
  string profilePhoto = 4;
  // 昵称
  string nickname = 5;
  // 电话
  string phone = 6;
  // 注册时间
  int64 regTime = 7;
  // 邀请人数
  int32 invitationNum = 8;
}
message IsInvitationRequest {
  // 会员编号
  int64 memberId = 1;
  // 邀请人会员编号
  int64 inviterId = 2;
}

enum PagingCouponState {
  CS_ALL = 0;
  CS_AVAILABLE = 1;
  CS_EXPIRED = 2;
}

message MemberCouponPagingRequest {
  // 会员编号
  int64 memberId = 1;
  // 状态,-1为全部
  PagingCouponState state = 2;
  // 开始条数
  int64 begin = 3;
  // 结束条数
  int64 end = 4;
}

message MemberCouponListResponse {
  int64 total = 1;
  repeated SMemberCoupon data = 2;
}
message SMemberCoupon {
  // 优惠券编号
  int64 couponId = 1;
  // 数量
  int32 number = 2;
  // 优惠券标题
  string transactionTitle = 3;
  //优惠码
  string code = 4;
  //优惠金额
  int32 discountFee = 5;
  //订单折扣(不打折为100)
  int32 discount = 6;
  //是否使用
  bool isUsed = 7;
  // 获得时间
  int64 getTime = 8;
  //结束日期
  int64 overTime = 9;
}


enum FavoriteType {
  UNUSED = 0;
  SHOP = 1;
  GOOGS = 2;
}

// 收藏请求
message FavoriteRequest {
  // 会员编号
  int64 memberId = 1;
  // 收藏类型
  FavoriteType favoriteType = 2;
  // 关联Id
  int64 referId = 3;
}

message DepthRequest {
  // 会员编号
  sint64 memberId = 1;
  // 深度
  sint32 depth = 2;
}
message InviterIdListResponse {
  repeated sint64 value = 1;

}
message InviteQuantityRequest {
  sint64 memberId = 1;
  map<string, string> data = 2;
}

message MemberIdListResponse {
  repeated sint64 value = 1;
}


// 关联第三方应用账号请求
message MemberOAuthRequest{
  /** 会员ID */
  int64 memberId = 1;
  /** 应用代码 */
  string appCode = 2;
}

/** 关联第三方应用账号 */
message SMemberOAuthAccount{
   /** 会员ID */
   int64 memberId = 1;
   /** 应用代码,如wx */
   string appCode = 2;
   /** 第三方应用id */
   string openId = 3;
   /** 第三方应用认证令牌 */
   string authToken = 4;
   /** 头像地址 */
   string profilePhoto = 5;
}
