syntax = "proto3";

import "global.proto";
import "message/merchant_dto.proto";
import "message/order_dto.proto";
import "message/wallet_dto.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

//商家服务
service MerchantService {
    // 获取商家的信息,mchId
    rpc GetMerchant (Int64) returns (QMerchant);
    // 根据电子邮箱获取商户编号,如果未注册,则返回0
    rpc GetMerchantIdByUsername(String)returns(Int64);
    // 注册商户并开店
    rpc CreateMerchant (CreateMerchantRequest) returns (MerchantCreateResponse);
    // 保存商户
    rpc SaveMerchant (SaveMerchantRequest) returns (Result);
    // 保存商户认证信息
    rpc SaveAuthenticate (SaveAuthenticateRequest) returns (TxResult);
    // 审核商户申请信息
    rpc ReviewAuthenticate (MerchantReviewRequest) returns (TxResult);
    // 验证用户密码,并返回编号。可传入商户或会员的账号密码
    rpc CheckLogin (MchUserPwdRequest) returns (MchLoginResponse);
    // 验证商户状态,mchId
    rpc Stat (Int64) returns (Result);
    // 同步批发商品,mchId
    rpc SyncWholesaleItem (Int64) returns (SyncWSItemsResponse);
    // 获取所有的交易设置,mchId
    rpc GetAllTradeConf_ (Int64) returns (STradeConfListResponse);
    // 根据交易类型获取交易设置
    rpc GetTradeConf (TradeConfRequest) returns (STradeConf_);
    // 保存交易设置
    rpc SaveTradeConf (TradeConfSaveRequest) returns (Result);
    // 根据会员号获取商户编号
    rpc GetMerchantIdByMember (MemberId) returns (Int64);
    /** 更换会员绑定 */
    rpc ChangeMemberBind(ChangeMemberBindRequest)returns(Result);
  
    // 设置商户启用或停用
    rpc updateLockStatus (MerchantLockStatusRequest) returns (TxResult);
    // 根据主机查询商户编号
    rpc GetMerchantIdByHost (String) returns (Int64);
    // 获取商户的域名
    rpc GetMerchantMajorHost (MerchantId) returns (String);
    rpc SaveSaleConf (SaveMerchantSaleConfRequest) returns (Result);
    rpc GetSaleConf (MerchantId) returns (SMerchantSaleConf);
    rpc GetShopId (MerchantId) returns (Int64);
    // 修改密码
    rpc changePassword (ModifyMerchantPasswordRequest) returns (TxResult);

    // 保存API信息
    //rpc SaveApiInfo(mchId int64, d *merchant.ApiInfo) error
    // 获取API接口
    rpc GetApiInfo (MerchantId) returns (SMerchantApiInfo);
    // 启用/停用接口权限
    rpc ToggleApiPerm (MerchantApiPermRequest) returns (Result);
    // 根据API ID获取MerchantId
    rpc GetMerchantIdByApiId (String) returns (Int64);
    // 查询分页订单
    rpc PagedNormalOrderOfVendor (MerchantOrderRequest) returns (PagingMerchantOrderListResponse);
    // 查询分页订单
    rpc PagedWholesaleOrderOfVendor (MerchantOrderRequest) returns (PagingMerchantOrderListResponse);
    // 查询分页订单
    rpc PagedTradeOrderOfVendor (MerchantOrderRequest) returns (PagingMerchantOrderListResponse);
    // 提到会员账户
    rpc WithdrawToMemberAccount (WithdrawToMemberAccountRequest) returns (Result);

    rpc GetMchBuyerGroup_ (MerchantBuyerGroupId) returns (SMerchantBuyerGroup);
    // 保存
    rpc SaveMchBuyerGroup (SaveMerchantBuyerGroupRequest) returns (Result);
    // 获取买家分组
    rpc GetBuyerGroups (MerchantId) returns (MerchantBuyerGroupListResponse);
    // 获取批发返点率
    rpc GetRebateRate (MerchantBuyerGroupId) returns (WholesaleRebateRateListResponse);
    // 保存分组返点率
    rpc SaveGroupRebateRate (SaveWholesaleRebateRateRequest) returns (Result);
    // 获取商户员工
    rpc GetStaff(StaffRequest) returns (SStaff);
    // 根据会员编号获取商户员工
    rpc GetStaffByMember(MemberStaffRequest) returns (SStaff);
    // 保存员工
    rpc SaveStaff(SaveStaffRequest)returns(Result);
    // 更新员工工作状态
    rpc UpdateStaffWorkStatus(UpdateStaffWorkStatusRequest)returns(TxResult);
    // 员工转商户,生成审批请求
    rpc TransferStaff(TransferStaffRequest)returns(TxResult);
    // 获取钱包账户
    rpc GetAccount (MerchantId) returns (SMerchantAccount);
    // 账户入账
    rpc CarryToAccount(MerchantAccountCarrayRequest) returns (TxResult);
    // 账户人工调整
    rpc AdjustAccount (UserWalletAdjustRequest) returns (TxResult);
    // 账户冻结
    rpc Freeze (UserWalletFreezeRequest) returns (TxResult);
    // 账户解冻
    rpc Unfreeze (UserWalletUnfreezeRequest) returns (TxResult);
    // 提现并返回提现编号,交易号以及错误信息
    rpc RequestWithdrawal (UserWithdrawRequest) returns (TxResult);
    // 确认提现
    rpc ReviewWithdrawal (ReviewUserWithdrawalRequest) returns (TxResult);
    // 收到款项,完成提现
    rpc CompleteTransaction (FinishUserTransactionRequest) returns (TxResult);
    // 获取钱包流水记录
    rpc GetWalletTxLog (UserWalletTxId) returns (UserWalletTxResponse);
    // 根据月份时间,获取当前账单
    rpc GetBill (BillTimeRequest) returns (SMerchantBill);
    // 手动调整商户账单金额,仅当账单金额对不上时进行调整
	rpc ManualAdjustBillAmount(ManualAdjustMerchantBillAmountRequest) returns (TxResult);
	// GenerateBill 生成商户账单
	rpc GenerateBill(GenerateMerchantBillRequest) returns (TxResult);
	// ReviewBill 审核账单
	rpc ReviewBill(ReviewMerchantBillRequest) returns (TxResult);
	// ConfirmBill 核对账单
	rpc ConfirmBill(MerchantConfirmBillRequest) returns (TxResult);
	// SettleBill 结算账单
	rpc SettleBill(SettleMerchantBillRequest) returns (TxResult);
    // UpdateSettlement 更新结算信息
    rpc UpdateSettlement(UpdateMerchantSettlementRequest)returns(TxResult);

    // 商户申请发票
    rpc RequestInvoice(MerchantRequestInvoiceRequest) returns (TxResult);
    // 获取结算设置
    rpc GetSettleConf (MerchantId) returns (SSettleConf);
    //  保存结算设置
    rpc SaveSettleConf (SettleConfigSaveRequest) returns (TxResult);
}


/** 商户账户入账请求 */
message MerchantAccountCarrayRequest{
  // 会员编号
  sint64 userId = 1;
  // 明细标题
  string transactionTitle = 2;
  // 交易金额(包含手续费)
  int64 amount = 3;
  // 手续费
  int64 transactionFee = 4;
  // 外部交易号
  string outerTransactionNo = 5;
  // 备注
  string transactionRemark = 6;
  // 是否先冻结
  bool freeze = 7;
  // 外部交易用户编号
  int64 outerTxUid = 8;
}

// 员工请求
message StaffRequest{
    // 员工编号
    sint64 staffId = 1;
    // 商户编号
    sint64 mchId = 2;
}

// 根据会员编号获取员工请求
message MemberStaffRequest{
    // 会员编号
    sint64 memberId = 1;
}

// 商户员工
message SStaff{
    // 编号
    int64 id = 1;
    // 会员编号
    int64 memberId = 2;
    // 站点编号
    int32 stationId = 3;
    // 商户编号
    int64 mchId = 4;
    // 坐席标志
    int32 flag = 5;
    // 性别: 0: 未知 1:男 2:女
    int32 gender = 6;
    // 昵称
    string nickname = 7;
    // 工作状态: 1: 离线 2:在线空闲 3: 工作中 4:离职
    int32 workStatus = 8;
    // 评分
    int32 grade = 9;
    // 状态: 1: 正常  2: 锁定
    int32 status = 10;
    // 是否认证 0:否 1:是
    int32 isCertified = 11;
    // 认证姓名
    string certifiedName = 12;
    // 高级用户等级
    int32 premiumLevel = 13;
    // 创建时间
    int64 createTime = 14;
    // 最后在线时间
    int64 lastOnlineTime = 15;
    // IM是否注册 0:否 1:是
    int32 imInitialized = 16;
    // 用户代码
    string userCode = 17;
    // 是否保持上线
    bool isKeepOnline = 18;
}

// 保存员工请求
message SaveStaffRequest{
    // 编号
    int64 id = 1;
    // 坐席标志
    int32 flag = 5;
    // 性别: 0: 未知 1:男 2:女
    int32 gender = 6;
    // 昵称
    string nickname = 7;
    // 工作状态: 1: 离线 2:在线空闲 3: 工作中 4:离职
    int32 workStatus = 8;
    // 评分
    int32 grade = 9;
}

// 更新员工工作状态请求
message UpdateStaffWorkStatusRequest{
    // 商户编号
    int64 mchId = 1;
    // 员工编号
    int64 staffId = 2;
    // 工作状态
    int32 workStatus = 3;
    // 是否保持上线
    bool isKeepOnline = 4;
}

message MerchantOrderRequest {
    // 商户编号
    int64 merchantId = 1;
    // 是否分页
    bool pagination = 2;
    // 分页参数
    SPagingParams params = 3;
}


message PagingMerchantOrderListResponse {
    int64 total = 1;
    repeated SMerchantOrder data = 2;
}

message SMerchantOrder {
    int64 orderId = 1;
    string orderNo = 2;
    string parentNo = 3;
    int64 buyerId = 4;
    string buyerName = 5;
    // 订单详情,主要描述订单的内容
    string details = 6;
    double itemAmount = 7;
    double discountAmount = 8;
    double expressFee = 9;
    double packageFee = 10;
    bool isPaid = 11;
    double finalAmount = 12;
    int32 state = 13;
    string statusText = 14;
    int64 createTime = 15;
    repeated SOrderItem items = 16;
    map<string, string> data = 17;
}

// 员工转商户请求
message TransferStaffRequest{
    // 商户编号
    int64 mchId = 1;
    // 员工编号
    int64 staffId = 2;
    // 转移商户编号
    int64 transferMchId = 3;
}

// 获取商户月度账单请求
message BillTimeRequest{
    // 商户编号
    int64 mchId = 1;
    // 月份第一天的时间戳
    int64 billTime = 2;
}

// 商户月度账单
message SMerchantBill{
    // 编号
    int64 id = 1;
    // 商户编号
    int64 mchId = 2;
    // 账单类型, 1: 日账单  2: 月度账单
    int32 billType =3;
    // 账单时间
    int64 billTime = 4;
    // 月份: 例:202408
    string billMonth = 5;
    // 账单开始时间
    int64 startTime = 6;
    // 账单结束时间
    int64 endTime = 7;
    // 总交易笔数
    int64 totalTxCount = 8;
    // 总交易金额
    int64 totalTxAmount = 9;
    // 总交易费 
    int64 totalTxFee = 10;
    // 总退款金额
    int64 totalRefundAmount =11;
    // 账单状态: 0: 待生成 1: 待确认 2: 待复核 3: 已复核
    int32 status = 12;
    // 审核人编号
    int64 reviewerId = 13;
    // 审核人名称
    string reviewerName = 14;
    // 审核时间
    int64 reviewTime = 15;
    // 结算状态: 0: 未结算 1: 已结算
    int32 settleStatus = 16;
    // 结算平台编码
    string settleSpCode = 17;
    // 结算单号
    string settleTxNo = 18;
    // 结算结果: 0: 无需结算 1: 结算在途 2: 结算失败 3: 结算到帐
    int32 settleResult = 19;
    // 结算备注
    string settleRemark = 20;
    // 创建时间
    int64 createTime = 21;
    // 账单生成时间
    int64 buildTime = 22;
    // 更新时间
    int64 updateTime = 23;
}

// 手动调整商户账单金额请求
message ManualAdjustMerchantBillAmountRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单金额类型: 1: 商城金额 2: 线下金额 3: 其他金额
    int32 billAmountType = 2;
    // 调整标题
    string title = 3;
    // 调整金额
    int64 amount = 4;
    // 交易费
    int64 txFee = 5;
    // 操作人编号
    int64 oprUid = 6;
    // 备注
    string remark  = 7;
}

// 生成商户账单请求
message GenerateMerchantBillRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单编号
    int64 billId = 2;
    // 账单类型, 1: 日账单 2: 月账单
    int32 billType = 3;
    // 账单日期,当未传入账单编号时,使用当前日期生成
    int64 unixtime = 4;
}



// 审核商户月度账单请求
message ReviewMerchantBillRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单编号
    int64 billId = 2;
    // 审核人编号
    int64 reviewUid = 3;
    // 审核备注
    string reviewRemark = 4;
}

// 商户核对月度账单请求
message MerchantConfirmBillRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单编号
    int64 billId = 2;
}

// 结算商户月度账单请求
message SettleMerchantBillRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单编号
    int64 billId = 2;
}

// 更新结算信息请求
message UpdateMerchantSettlementRequest{
    // 商户编号
    int64 mchId = 1;
    // 账单编号
    int64 billId = 2;
    // 结算平台编码
    string spCode = 3;
    // 结算单号
    string settleTxNo = 4;
    // 结算结果: 1: 结算在途 2: 结算失败 3: 结算到帐
    int32 settleResult = 5;
    // 结算备注
    string message = 6;
}

// 商户申请发票请求
message MerchantRequestInvoiceRequest{
    // 商户编号
    int64 mchId = 1;
    // 申请金额
    int64 amount = 2;
    // 备注
    string remark = 3;
}

// 商户结算设置
message SSettleConf {
    // 商户编号
    int64 mchId = 1;        
    // 商户名称
    string mchName = 2;
    // 订单交易费率
    float orderTxRate = 4;
    // 其他交易费率
    float otherTxRate = 5;
    // 子商户号
    string subMchNo = 6;
}

// 保存商户结算设置请求
message SettleConfigSaveRequest{
    // 商户编号
    int64 mchId = 1;
    // 订单交易费率
    float orderTxRate = 2;
    // 其他交易费率
    float otherTxRate = 3;
    // 子商户号
    string subMchNo = 4;
}
