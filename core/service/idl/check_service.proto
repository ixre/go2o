/**
 * Copyright (C) 2021 56X.NET, All rights reserved.
 *
 * name : template_service.proto
 * author : jarrysix
 * date : 2024/06/07 23:37:45
 * description : 校验服务
 * history :
 */

 syntax = "proto3";
 option go_package = "./;proto";
 option java_package = "com.github.go2o.rpc";


// 校验服务
service CheckService {
    // 发送会员验证码消息, 并返回验证码, 验证码通过data.CheckCode获取
    rpc sendCode (SendCheckCodeRequest) returns (SendCheckCodeResponse) {
    }
    // 比较验证码是否正确, 正确则返回用户编号
    rpc compareCode (CompareCheckCodeRequest) returns (CompareCheckCodeResponse) {
    }
    // 重置验证码
    rpc resetCode (ResetCheckCodeRequest) returns (ResetCheckCodeResponse);

    // 发放访问令牌,续期即重新颁发
    rpc grantAccessToken(GrantAccessTokenRequest) returns(GrantAccessTokenResponse){}

    // 检查令牌是否有效并返回新的令牌
    rpc checkAccessToken(CheckAccessTokenRequest) returns(CheckAccessTokenResponse){}
 
}


// 发送验证码请求
message SendCheckCodeRequest {
    // 令牌 
    string token = 1;
    // 会员编号
    sint64 userId = 2;
    // 接收账号（手机号、邮箱）
    string receptAccount = 3;
    // 操作
    string operation = 4;
    // 发送消息模板编号
    string templateCode = 5;
    // 有效时间（分钟）
    sint32 effective = 6;
}

// 发送验证码响应
message SendCheckCodeResponse{
  // 错误码
  int32 code = 1;
  // 错误消息
  string message = 2;
  // 验证码
  string checkCode = 3;
}

// 比较验证码请求
message CompareCheckCodeRequest {
  // 令牌 
  string token = 1;
  // 接收账号（手机号、邮箱）
  string receptAccount = 2;
  // 校验码
  string checkCode = 3;
}


// 比较验证码响应
message CompareCheckCodeResponse {
  // 错误码
  int32 code = 1;
  // 错误消息
  string message = 2;
  // 会员编号
  sint64 userId = 3;
}

// 重置验证码请求
message ResetCheckCodeRequest {
  // 令牌 
  string token = 1;
  // 接收账号（手机号、邮箱）
  string receptAccount = 2;
  // 校验码
  string checkCode = 3;
}

// 重置验证码响应
message ResetCheckCodeResponse {
  // 错误码
  int32 code = 1;
  // 错误消息
  string message = 2;
}
// 请求访问令牌
message GrantAccessTokenRequest{
  // 用户类型 1:会员 2:商户 3:系统用户
  sint32 userType = 1;
  // 会员编号
  sint64 userId = 2;
  // 令牌过期时间(单位:s)
  sint64 expiresTime = 3;
  // 令牌主题
  string sub = 4;
  // 强制踢出其他用户
  bool onceLogin = 5;
}

// 发放访问令牌响应
message GrantAccessTokenResponse{
  // 错误码
  int64 code = 1;
  // 错误信息
  string message = 2;
  // 访问令牌
  string accessToken = 3;
}

// 检查令牌请求
message CheckAccessTokenRequest{
  // 访问令牌
  string accessToken = 1;
  // 检测过期时间,在此时间内过期,将生成返回新的令牌
  sint64 checkExpireTime = 2;
  // 新生成令牌的有效时间
  sint64 renewExpiresTime = 3;
  // 令牌主题
  string sub = 4;
}

// 检查令牌响应
message CheckAccessTokenResponse{
  // 错误码
  int32 code = 1;
  // 错误信息
  string message = 2;
  // 用户类型 1:会员 2:商户 3:系统用户
  sint32 userType = 3;
  // 会员编号
  sint64 userId = 4;
  // 是否过期
  bool isExpires = 5;
  // 令牌过期时间
  sint64 tokenExpiresTime = 6; 
  // 重新生成的令牌
  string renewAccessToken = 7;
  // 原始(当前请求)令牌
  string rawAccessToken = 8;
}